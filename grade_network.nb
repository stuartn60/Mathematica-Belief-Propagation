(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    210575,       3986]
NotebookOptionsPosition[    208409,       3948]
NotebookOutlinePosition[    208843,       3965]
CellTagsIndexPosition[    208800,       3962]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"Probabilistic", " ", "Graphical", " ", "Models", " ", 
  RowBox[{"(", "2009", ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"by", " ", "Daphne", " ", "Koller", " ", "and", " ", "Neir", " ", 
  RowBox[{"Friedman", ":", " ", 
   RowBox[{"Bayesian", " ", "Network", " ", 
    RowBox[{"(", 
     RowBox[{"Page", " ", "53"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"(", 
  RowBox[{
   RowBox[{
    RowBox[{"see", " ", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
        "questions"}], "/", "128945"}], "/", "problems"}], "-", "encoding", 
     "-", "a", "-", "bayesian", "-", "network", "-", "with", "-", "just", "-",
      "five", "-", "nodes", "-", "using", "-", 
     RowBox[{"probabilitydistr", "?", "noredirect"}]}]}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "&"}], "lq"}], "=", "1"}]}], ")"}]}], "Text",
 CellChangeTimes->{{3.739825384367751*^9, 3.739825384374673*^9}, {
  3.7398254145341463`*^9, 3.739825424405411*^9}, {3.739825465837337*^9, 
  3.739825559139292*^9}, {3.7398256118551817`*^9, 3.7398256922401648`*^9}, {
  3.739825741329471*^9, 3.739825760880368*^9}, {3.739825924828109*^9, 
  3.739825934320303*^9}, {3.7398259666243067`*^9, 3.739826020245174*^9}, {
  3.739826187648551*^9, 3.739826216531418*^9}, {3.739826825488327*^9, 
  3.739826871936975*^9}, {3.7398380430451736`*^9, 3.739838061443103*^9}, {
  3.80120913065298*^9, 3.801209193855136*^9}, {3.801209228067114*^9, 
  3.801209240928162*^9}, {3.801209281324597*^9, 3.801209350357085*^9}, {
  3.801209383359417*^9, 3.8012094191837482`*^9}, {3.801209545677033*^9, 
  3.801209548579097*^9}, {3.801209656559547*^9, 3.801209675184885*^9}, {
  3.801209723666337*^9, 3.801210088468025*^9}, {3.804908293607771*^9, 
  3.80490829414824*^9}},ExpressionUUID->"cb0a4d9e-0db6-4381-8904-\
f4acd1eb13e5"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
VNGAy8Zj6NetExYdUu1e8XGzkpcm1qfOS4rrU/GTBxjWuAwMRerDeFdcBQ/F
ZaIxpvF7yv7P4K0aRXU6Lv59DNk1GdkMeTFljxHXbd7YuesAAsPUcYpY3dh5
2s2Piu/znVzeRzlPbsw/rqrKh4/Ud8tt5TDxTk09po73yHfK0Wfhqmk/Ro1f
JL77c/AnMBRtCzVi3rPrU32e9POlPv30U5H3DRs2qGnTaVSGYRgmIYn19Wke
FNWjAwYMEJ8dfSNTOAVCbxI+G4aJ645aq869kPbT296bkEvZX324Wq/b9aku
D3bbiNZ+ua76Ba2HrYs/PhlzOFJen6r5m9OpsnK+CjhiS6hPD83opuzPjgmH
NX0a7aBP7fNbHmLPzHGoXbk0stLcr1xFMXazh5quGJ4f9TyQsvpU85fBRXSo
khsvl+2Ai+IU0VBdS2IxpYVSJrNXwP5IzQ/APl4fq7l9R2HSdxWUtLyFqRtc
cPLgdkwc1hXvFy+Lfgt2qr7gcckreymqTzXb5+Yx34ixhy0+qs9PlKZPvdeN
Fufvtd5bfFbfKa1vKu3C0Rcwa/QUHApSf7tkkKIbi6WsPtXnSz5bf39/5MuX
D7lz54arq2uC71ijMgzDJMTR53Tx4sWifq9du7a9bUxdXymdPt2o6tMx69T5
9tJ+esd7M15W9n86fqv4HOOgT+V5xLikSOoNDGvdDHOOajaU2Dg8yUsuVfVp
Z9KnFXEsTJvLr+nTw9NJn76EaSfVlvFf9lPN5hunzQmJun8Hp7fMQImcBrxU
tiWC76nnT257yvrUeUkVfRobjrYVcin6tD0itXn8Up9OJn36UkUcuKCNN6gT
+ePn6/8TgJpFs6DQl/1xgbqJsWr94Ld2KDIbsmLcFqOW7rScvx+vTzf8XE85
TxFs8lYdXaQ+9Vo7Spy/90atjxsdP5dLG27AjkUT8ceGs/azLhlI9tPWEN3H
mGgR0yA5frXJSrFD/bpz506RvnLlyuH6dS1OHPuiMgzDJMCx7nRxcRF1J+kz
s9ks9qV+/55snur1r7guRjbl+oOXn1PTpdlPL55ZLtKVwP80Tj++qI5/S9vp
Xd8NqFOnC4LtMXQSzk9ONBWp4n+q/mbbpO+V85XGPrM63+vhI3X/pgktRBu7
1XRfy1esFo8xfqxVbxuW5/v7t1bK7yrjSFhC29eTYH3qvKSKPo27gPaVX8Er
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
n2EY5nnEUZvS+lANGzYU9eHMmTPFvsetZeJoM5XnWb9+PcaNG2c/d0auS1NL
nzoTrE+dl5TXp0RcAi1H8YQfPYpO0C+y95/Ir1P5PjrGUVupfaRH8rex8ccn
N1kprU/1vxF1knKPKH0xCbR0fH+Vvvv3eIOuvx0TLfKWlF5PbjoiIiLEtYgn
jS051sm3bt1ChQoV/rW+VFK/ZxiGyejofURlfffTTz+JerBDhw7i8+O0pb4e
lb+nunTo0KHiHC1bthT7Mnp8FNanTHqSOvrUOUgNfeos6Mfpu3fvLurDu3fj
/eUfl0fH+VKenp549dVXkSdPHp4vxTDMc4+jNl26dKloH2gt6Dt3VI+rxOrQ
pGymR48etffzaWvTpo3Yz/rU+WF96rywPs2Y6PVply5dRN7ee+897N+/X+yT
Pj1J2VId5wSsWbNGnOOjjz4SMajkORL7LcMwTEbFsX9+5swZvPLKKyhQoABC
QkISfJeUNpX1Js3tp1jSVHfSOQYOHIjXX38dTZs2tZ8nI9efrE+Z9IT1acZE
r087d+4s8kZrnFDd0b9/f/sapo+zpTpq1LFjx9rXl9KPfzEMwzwPOPo3kc6i
NZ/1usTRv0lfD+rr07Nnz6Js2bLitxUrVhSf7927h0KFCqFx48biGIrZQr/J
6Buh16eRkZH2e5XeaXvWjZ4RsXXrVtanTgbr04xJYvZTWuOE7J/0//fffx8n
TsTHu0vMlupYV9MxP/zwg/j9r7/+Kvbp5wdk5PvFMMyLjaPe1K8PldR8qMT8
TEnPDBkyBC+99JKwCfz88892nwBqa8gO26xZswTny6i8SPbT3bt3sz51Mhz1
KY3zEvTuivgNGXiTc4auXr2aQJ+KOU0xMemevmfdZL+va9euIm9ubm7i85gx
Y0QdIuKvjhiRpF+qvu6R+y9evCjWm6bf7tq1K0EZycj1LMMwLy6OfqME1Y1U
z9H4E5FYX9zRz/TYsWOoWrWq+B35m546dcr+W+L27dt466238OWXXyIoKAjn
z58X66F4eHhkyI3STpuXlxeKFi0q8k26/ODBg2KuQkbOm9zOnTsHo9Eo+iis
T50LR31KNm4io/f7iMTspxRz+Xmxn8o6Ua7DR35UEqo3P/jgA/vYk6xH9eM1
8jyO/lj0zubOnVv4UfF8KYZhMjqOvkx//fWXqBs//PBDMe+ecGwX9HXsP//8
g1GjRgltRrFRhw8fbu/3yzFugmwhpUqVEuem4+R8Kd4yzua47jeTfsj3iubV
0LPp0aOHsKEuXrxYzGnMyNuSJUuwYsUKzJ49G9mzZxf5y5cvn9if3mlLiY2e
0erVq/H555+LvJH/EyHtqjTmRDYCaUsdNmzYY22phHwnyc+DflOjRg1hEyCe
B13PMMyLhWP/m/yeaH0oGksLDg5O8J08Xl8/Uh9d+k2RvymtLyV/I/2m5DVI
x1Is6cGDB4t4VRRv6nnZqP2QW3qnJTU2+bzIVkw8D74LGR1H3wveMt5GPlD0
Vz/WpLeTUn1K65jSMWRLlX6p+vqVcIy5QvUQ/Yb8W/Xfy/8zDMM4M47+Sxcu
XED58uVFvSb9l/R2Mv34P/0lrfnyyy8jc+bMwuc0qXmnXB8yTMoj3yuKKXTy
5EmcPn1ajBM/bxtpN7mld1pSeqNnRhpU+ujr62RZ15I/MfXpqV6mupbGpx48
eCC+02tU+Xu5ff/99+I3+vlS+mswDMM4I/q+tIy136hRI1GfTZ48WXynr/v0
fXqyoX322WfiWNKz5G9JPGmuqbyWPBdvGW9jGwzDpC6OfqWy3qU40nL+E8Wi
Jv99/TGJxV+huKqJ2Rv4/WUYxpnR20Mdx4OkZtUfQ/34adOmiVimdCzF6qP5
C4SjzTSp6/GW8TfGOdD3FdK738Jbyvb79O+a3paqX4eP/P1pDIvWnib0dbDU
oa6ursJ/l/y1AgIC7Mfpr8UwDOMsyHpJ1mHr168X9V2lSpWEjyiht3MS3t7e
qFOnjjiOYqJKmynb1RiGYVIHxz6I1J+HDh0S9bWcB0X1M6Gvsx3nS1WpUoXn
SzEM47TI+kjWYbR+c65cuVCwYMEE8Uik5qR6bMaMGciRI4eo4/r06WOf0+9o
M+W6jmEYJuVJypY6YMAAMceK/FLJz1Tvl0rHyvpZxgvs1KmT/XseE2EYxlnQ
13EEzYeS/kw0B5iQazoRFKO0Xr164vuSJUvaYws9aX1ohmEYJmVJypZKY1n/
+9//RD1NMQHJ5kDItQDoeFrXQNblv//+u/her1EZhmHSC0e/JtrkeniTJk0S
35F/qbSZzp071+5n2q5dO/uanWwzZRiGSR+S8kuleQByrVSKz08aVMZSlWtx
UR1O66bQMTt37hT7eL4UwzDpiV6TyvqI1tGjeqpDhw4J6jlaK0j2s2mtp40b
N4r97GfKMAzjHCRlS6X13YoXLy7qb1qfWvpsSa1K6wBQTMDChQv/K7411+kM
w6Q1jvOhVq1aZR8LunnzpthHfWyymdIaLfRdy5YtRVxFwtFmyjAMw6QvSdlS
qd7u1q2bqMdfffVVUa/r/bZoDS76rlatWi/EfKnExg6TikvyPOafyVi8SOU1
sflQNP5DfWgfHx+xLzAwEN98842os/Lnz29fY539TBmGYZybpGypNIavj5dq
Mpnsv/n555/tvluEs86XSqptlnO/HONpS59b2sjmot9on/53+s3xWHm83PTX
0P/uedUNzNPzOF35X8orbUmV16TKtzxnUuX1cWU2ve6XrK+uXLlij9e8bds2
sW/FihXIkyeP2NemTRtERESI/exnyjAMk3FIzJZ69epVdO3aFZkyZRLrVk+f
Pl18T/bUb7/9VtT7M2fOFMfKuVRpWdcn1ZbLdlbf7jqb9tOnR6ZZagXZfjqL
FmBSjseV2cSev/yNM+BYZvXvWFrqV31dJfvVDRo0EPXR/PnzxXp6sn4qWrQo
/vrrL/vvnLEuYBiGYR6Poy1Vft6yZYuo56m+r1mzJmw2m5hT9fbbb4t9e/bs
Ecel5nypxPSc3taTVHvuaJeitotiz9A6hrRG7I4dO0T+Fi1aJNY+/OOPP4Qm
//zzz1G3bl0Rt5s28seluRWOG31Xu3Zt+7H094svvhBzNOhctAbChg0bRPya
w4cP49y5c8J3l+w9pPOTaseTyq/UAmxvdW4cy53Uc7LMPk5/6ssExXyjskJz
e9zc3HDgwAFRXlevXo2pU6eKNY/Gjx8vyuKXX35pL69UDpMqs1S29cfR+Aj5
9FBfk+a707tA16AxFLomjZvT/Eh6d5LznuntvMnJ73+9t7K+GTdunKiHWrdu
LbToa6+9Jj7TGs1UVxFsM2UYhsnY6Otu2aYSFy9eRKtWrUS9T/U/6S3SeOTT
lTdv3hSfL5WUTTSx88v/37t3D1arVehOWleA/BAo5nb79u3RsGFDfPLJJyhS
pIjIQ6lSpcR44McffyzW26a2mmwudNx3330n2ramTZuKv/T5xx9/FHpgypQp
9o0+U9vYpEkTcazc6DOdhzbyfSM9QNegNQ7omhQznNJQuXJloW2bN28u4if0
69dP2KhJg9CaCaRLHJ+J/m9ieoc1a9qTmBbV9ycSe3YEHUPPmPTf3r17RQxi
KgNUFpo1aybKpIyZUaBAAfF/WleDyhNtsozRJsseldfGjRsLrUbno/6RLK/U
/yI9S/Pa9WWcNln26S/pXCqvH330kbhm6dKlRRpoHTnyO6ff0jvVt29fDBky
RGhlWi+Z3j2K46TPo2N+EyuvT1NmHbUp9f0obRRjn/rOFMuZ7tXKlSvF9+xn
yjAM83yRlC2VYrJQO0VtArVREyZMEP8nnUf2FcffPs319O279J9z/I6gdQr9
/PxEWqjN7d27N6pXry7SRe036cD3338f77zzjpirS20otdOLFy/Gpk2bhP6j
tVtJF9D8CYrVbbFYEB4ejrCwMKHFr1+/LuaK0Ub/v3TpkvjecSO7kjxOv5Gv
G52LNtLutNGcDbqmi4uLsDn/+eefYv4Z2Vp79uwpNAHFoqW8kHYl/1/S/qQZ
aI0EGruktb/omjLul2P7npiNldvklMexvCamRfVaisrK/v37MWfOHLHGMGlB
6iu9++674llXrVpV9JlIG5LuozIxe/Zsof2orJw4cQIeHh6iDFFZIn9wKluy
HDqWP/LNoTKoL6vyM2lix+OpzMvzmc1m8U7QmsZUXsmGSnGSaa1QOc4wePBg
0V8tW7as6HNVq1YNFStWFHmi969Xr15CE9Nv6Dx37979130j5L1LTnnV61yC
xiIojin5H9E6I1QPNWrUKIGfqb4/y+8BwzDM84FjOyLremrLyD4j7TpyDkLH
jh3txz6pLUjMly2x8Tca3yQ7LWlRavOoHaTYMeRbQLZbsuWQtiM7JtlMSL+R
LYfa8MuXL4uxfKkVaawvNDTU3v7SmCm1nf7+/kLvUjwt2kgDkP1Sv9E++b3j
5ngsbfrv6fy0kRama4aEhAg9TPYmSpPUuZReSiul5fTp09i+fbuIRTts2DBh
86J2n/JMGpzuAdlef/nlF6Ed6PeJ2emkzYptq89GYuXV0S4nN3oWZA8lHUc2
PXpWpEHpPaHyS/06eqakVXft2iXs/fTM6XfUD5I6UpZXKitUnqnsUBmS5elx
ZfBx5fVJ5ZvSQuend4OuSe8KvTOUFkoTvUuURnq3qMySViatSOWQ3kHS1vSu
kn8B1Q+0PhPZYmktZepL0tgGXUPGrUuqLkhM68s6gta/k/OhaKN+HPX35PFs
M2UYhnn+ScyWShtpRjlenj17dvGXbCaE3r7n+DcpTUrcv39ftHXUxtEaMGST
ef3114V9lj4PHz5c2JROnjyZwIZEbTu1nbSP2lRqXx3baGoT5Sbb+KQ2qVvp
79NuTzq3Ph2Oupj+0jmkTZfypdcrdDyt10i21LZt2wo7HNmwSPuQb2Hnzp1F
O02/1Wsm+eycde6NM5KUT6Xjd3Svly1bJp4HjcnTeu9kByffDloTmHQo2ezp
2Up9J5+r3lapLwOO5TW5Zfa/bk9TZh21Ln0v+12UP8qbLK+07/jx40KTkl2Y
7JvkZ0NxoKi/RX4M5PNKNlryz9Hf28Rsq/L/5BMjtWn9+vXFPST0fqb6czEM
wzDPJ0nZUqktkn6pUqfSOCbhOLaWlJ2U2uiFCxeiRYsWwreVNCmNd5JdlLQW
2RKp/SF7DdluyY5D9iRHu6fe9pMSOjMtN31a9XrAUa+Q/YzafNI4ZLsiG6zU
rORbSL6vZKsjmxX5CZCdjua5kE+EvOfy2TiuUctt+b/7UYlpUrLd0T0l/2by
zSRbPpVZ0l4zZswQtlN6JvRsyB5Kz4r6TfTsEiuv+jKbUcvr495FelfpnZW2
YfpM/gqk6aVvDvk5kH8DjcFQ34vqBP09l3FDCPJ1obqmUKFCmDdvXoJnxWWZ
YRjmxSQpW+qCBQvsa1qXKFFC2JQIvc1O/o42sreQTyjZRclPlOZh0Byk5cuX
i3WqSPeSHpVaVG9fSsqWlN5tdmpqgcR0gLwXpHuoPZe+s3S/yM+BbNlkWyK/
3PLlywt7HvkDyrVz5LNIyrfiRSKx/pd+H90zmotDc49IS5GNlGIakf8FjWvT
PZdalPoPUovK/sWLXF5lmdXfC7pfpN/pHad7Ru88vfs9evRAsWLFhO4nnwDy
kaB7KedDkf841TEUd4DqEIL9TBmGYRgisfkNBLU3Mg4h6SI5l1dqH2q/Z82a
Jfwm5VzgkSNHYt++fULPkm2FxgTJVvo4e+iLvj3OdiXHW0kjyXkx9B3NDaMY
5TTuTHYq8h8mXaWPCfYijv079rf0Njiy19FYAN036nOVK1dOxB6jNTTpXlMf
SupR6U+S2Fi8/pm9yFti/gLyHad3nt59qgOoLiAbNNUN5AtA6ynTvDGaV0a2
alrDjpA21Re9b8UwDMMkxLFtJ8jvdOnSpciZM6ewhxI0X53aePIjpTkSND53
5MgRYRulNp7ad/3YoH5+BrfryW/79RpAfz9pP7X9ZKui/69Zs0aMRZPmIrs1
xSGivoP+WT7vbX5ivqVyH2lOuid0f0gPUQwI8rUmOx6VV+qH0f8T60Nxmf1v
Zdbx/ac6ge411RHkv9q/f3/hZ03zrShmHPkHyDqHY0gxDMMwjuj1i1z/hqC4
NDR3ijZq52keBI3N0Tg0tTs0vqe3n3Dbnjrtv36uN9n3aL/0BaQ5KeQDQDbV
N998U8y5pu/kc31e2/zExvEJmsdOsUepvNKce4pv6+7uLnwmyKZH904fk4HL
a8qXV/lXXzdQXSF9fSjuMvlYU71C62DQ+hpSp/I4P8MwDEMk5otKkK2J5jwU
L15cxBun+DnSFiK1Eo/Zp0/7r/cFpDFVGv8neyDZVMkng9p9snvTfsJxzDsj
t/mO5VXaiCn/NB+c5pRTDAQqv7SP7gH5ODr6POu1FG+pU0715VXWGfQMZEwL
it9BNlUa+6e5lHINO7alMgzDvLgk5X9K7Qi17+RbSnPvKU4U+ZNJf1JntZMm
aA/JL060ifTdv8fMU12jyHM6zjGR+1Iwr3obFekxelZkjyL/YJr/Q+tmSh/i
jN7mJ+aLQnmjPNKYMeWZ5uSTJqV+lLw3zqJJ1fL477lH6veO85G0Y53g3Urp
91M+F7Kpkk6lNQuoD0xxPyjeKh1HvAg+KgzDMExCHGNlkz4lfz1at5PWTKS1
mWg8jmxPUv88bfuu12S+CeKJ+wh7lo+P8n8xH9gvvk3Wtc3J23Taw09Jp38g
zBS/32SMT7NoD/0QFGIWGi4kWP0upfRigk2fZ6nnAygWqjHlr+XQ7stxa7JP
kf/lihUrxJg/xUCn5ymfc0bUqIlpU4pZRr6l5NNIMeVJ65DviWM/ys8vkfUX
yJ6aZprVP0FaqCz6+fnDqJSJQLq+8r2fr7bfX7ffifp/KVle4++FqlOpjqFn
R8+T4lNQHGCK8aX3K9aXAYZhGOb5RB8/kyA/RooDQzbTv/76S+hSspfKeeTP
NI5PvwsMQnjkRVy+fAkXL14S15Pb5UsXEWYNVTRjkKov/XT2Toe23V9nD4tv
69TrUPseZLYi1OiDPdu3YP/Rc7CEhij7fRAYbEGkzYwzh/dh06bNOHjaA6Gh
ZiVtfqljnxJpN8JKdjyLGUEBfnA96w6/wMD/oL//e7tP86loDhDFl8+aNauI
SSmfe0bSqPq+lOxPUUyoV199VcQyknGOEs5z0sqF8n+TxSbizFJ5o/JH/798
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
jiHHUs6z3OXVk93V2+TVE//UXzft+LwneW9SXtlm+pfw3l2xYgUGDRqEcuXK
iX7inJS+vj/99JOwR1O29X5Cek6q5FVBQUFBIbngblOVXNVd93M/+Srtfsyl
Tj9A2gOff/55fPrpp+I995MDkCPQbkW9T51I+wz5K+1Y3Cfq64ic66H3cUB3
3ZrQlpC9y11fe9rcz6XnzuTV5Cp6Wyivn/9TV3M/48lWrVqFUaNGiXw6XPuk
bqcPKXkRY0Vov2MeSH2Mk3yVa6FP6vr9o8KTzOprucvPr1y5InI2de7cWYwJ
fVaZk5Oclb4BjBOkDzZ9fjmmcsy50d9SxgyKOlGaTEjfVk/y+qgy+1+/9SSv
ssaWoxaWo1Yc7zNuMkcZN9rx6acr55q0NZcvX17I60svvSTyI3M/uSrvcfd7
X84H9H2s/1xBQUFBQSG54ckHwN2vTG+vYswE7ai0GTLOp0yZMi6uxpzy1H0/
/vijqAvEHEFccyVvY21U6lZpg5R6VfpqkhfITepZuVGHxtWvun+T9k39Rm4p
j0fdLX3seE7GiPMaZC1YchXaOhctWiRsS1yfb9++vSs/F23JrC/68ccfC11P
jrN161bxe31sk7t+19ud9H2tkHg8jLzyM8oG50/0VyFH5ThyTkE/FubtpK2b
Y0155djPnz9fyAL9XgIDA8UY0+4qfQakb7bMtcSNsuYufzzvv8msqMnr9hv9
PSDvC3mfUF75nvcQ7aC03a9duxZjx45Fz549hf2TfjmsdUCZJSenvNJO2qVL
F3HPMhaSHN69n/RrKkpeFRQUFBS8EXqblJ5nuess+cpaMdSf1OfU7Yzvpa6s
UKECcuTIgcKFCwv+Sn3JjbXk6ePWuHFjtGzZUtgduT47adIkYe/htnHjRhHr
ThsQuQX5Am1C5Lju26lTp4S+lt/nxv+XLl2KadOmieMxBpnnoZ6mDmeMEmsz
0X+RNjbmHuU18toYE0KfxkyZMgl7KY/Hc1+9evW+/pHvpW53t+kp/Z78cO9v
jgFrwbrbBPXrAqy1Ru7J/ACs1fXyyy8jY8aMyJ07t5ALKQ+UV659c92APi6U
HcYKUV4pU1w7oIzRDsn5CmVVyuDx48eFbHqSWcoT+SXlXMoruaaUf94Lv/zy
i+DMLVq0wLfffivuI/rbUF55bbxG+jbzHqOvMz976qmnBMfmnItcVtbE9XTv
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
hScVen7KeELqQdZjGzRokFhz+uWXX564beDAgejdu7eItWB/MA94//798euv
v6b4tT3qxnYwp/knn3yC1q1bi5iS1DLObBvzRX744YeiRjllOKWvKSk2js+w
YcNEzkTGUih+mjD0+l72z4QJE8Qckzn9icft1+mJm9I+ljt3bnz//feuz3w1
d6vCo8GTfOzYsUPMR/kcI/T8VcmGwpMC/XORvIzzNpnT5EnUf/LeZw1BaTfl
eouMv/D1Z4NsR79+/YRfPpFaxlk+21n/Uq7p+vp4qfvz4eFJ32/btg1ZsmQR
skG46/vkkhNP9rE5c+YIGz/Xq+Rner7s6zKr8PDwJLMGg0Gsl9SoUQN//PGH
2Kfs6wpPEtz1H/kY/S0Jchl+9iRt8tnw559/ingF9sfzzz8v/MTksyOlr/FR
Num72KdPH5w6dSpVjfM///wj2tOxY8d4eSNT+roedWNtJDlm5Kd2u128V/w0
YXjS96xh/8orr6B69eq4evWq2Jdc+l7PMzmG8v/u3bsLG/imTZtc51drtwqE
J5mlnFarVk3kHDMajWKf4qgKTwo88VPGzRAyl82TthG0n0p+Sv81vf3UlzfZ
jr59+8azn6b0dSXFJp/p9E/R2099fZP3J8dM8dMHB/tOvso+pJ+n1PdyHp7U
+l5/LCmTfJ7UrFlTxGeTJyfHeRVSB6QsyPkp0a5dO2TOnBk7d+4U7z3Na/iq
8s8ppCbon92e+OmTBnlP/xs/9WUkxE9TAxLip74MxU8fDZLjE+xH2WcdOnQQ
9/fu3bvFe0/6/r9yp+q/J8fIEzfleBUoUAAVKlQQ6zLyWhSPUPAEvcxStqQc
zZ8/X/icjR8/XrzXy7NelpRcKaQWKH4aH4qf+i4UP1VICJ645G+//Sbu8X+L
k05I3//b53puSntXzpw50apVq/vO735MBQU9PMnToUOHkC1bNhFXJ22lUp74
Heot998qKPgqFD+ND+/hp/o13qQ7qrfw03hr2El0TK/gp25r849+OMVPkwqe
9P3evXsFf2TeSffPTpw4geDgYPG/ft1Ufk++P3funMsOq7d3jRw5UuTqmz17
tusz5Wuq8DDwJLOxsbHCT6RcuXI4f/6867uMpypdujT0+T2UnCn4MhQ/jY8U
5aeSi/JV6LI7uCOeMeLDJDl3SvJT17PWaUMS+lr4WOnbmPjjpxg/dc0h7rna
I+1kdx/RjqH4adLCk75nLN2bb74p8nddvnzZ9V3mJ+M++X33eYccl/bt24ta
Vfp9zN3GvHQqz7rCo0Ivc1JmGQtKmXvttddcz3GCNSkYg0dIHxIlbwq+CsVP
48N77KfJg5Tip/+1HnrvrtOO+gj21JThp/fizR/cebbe/p2YK1H8NOnhiaOy
Dir1PXlqYGCg2HfhwgW88cYb2Lx5s3iv1/ey72mrevXVV7Fv3z7x/tKlS/ji
iy+EvylrzxGKmyo8KhLyo2ZuZOYqW7lypXjPPGrUV3Kepfipgi9D8dP48Ar7
KW4j0hSEVeN/RYOWHXFGlJbRxumuj9tPnee5edGIIa1qC1//omW/w6aAaNd1
PEr/ppT91MFXHOcx7l+CGiXyIUeOIug+dTP+Fk1OfLsUP00+eIqTZj0E9rHU
98zpVblyZfG/Ps+F/H6XLl3w+eefi//Ja3PlyoWvvvpK8F15bMVNFZIKnuKm
5s6di3Tp0on6OkTFihUxZMgQ8b+cGynZU/BFKH4aH17BT+9eQ3RUDDYM+hZP
FfgAR1MBP7137y7EWW6fxYQOHdBz4ESsXDEPP1QuBr/Mb2Hx6d/F98RafyLP
kSL81OmLQZw3bEOPXr0xbf4yzBzRCXnTZkbL3w6JzwRPSdThFT9NTniK1Z83
b56471ln7dq1a3jppZewZ88e8Zmeb/7+++94/fXXBS/l5xybrl27uo6rcv0o
JBfc7finT59Gnjx50KhRIyxfvhwFCxaMFyul5E/BF6H4aXyk/Po+fRgdPOvc
rtHIXrwsjl127PdZfqp7jtpP7cc+f6v4X0jd3Vh8lT8Xyn/viCG5p1sLfVik
FD+967R528wWXPrrlms9f3aXanin5VTx/13FT70Sen5KvinvD+ZCJ/dk3BT9
S6tUqeL6npQz2laZM4r5fnLkyOHyA+Ax+fxILT5BCt4F+TzYunUrvvvuOyxY
sEDI7t9//y1sp6xdzfgpWZ9MyquCgq9B8dP4SHn7aRw/tW0aiCxFP8Yxn7ef
xvll3vjnlnYNbOMt3LjuuJaJtcqiTrsljmu5fce3+KkTTiuZsBPfEW/+wrTh
I7E24KL45E4i+1jx0+SF3rbEdfl3330XPXv2xK5duxASEiL4Z9GiRUU+f8bz
S9DPtEiRIihUqBBKlCgh4vf9/f2Ff8Bnn30maiJLGVRx1AoPCvc4PPdNPz+i
vNWpU0fIbL58+VCsWDH06tVLyCr1VsmSJXH9+nXxfcZT8dnPWnQJ1QuUawhy
+69rUVBIbih+Gh/eZD+1bxmUSvhpHFzPNo3H3RanPYefanyF6ftjxee37/ho
fJT0Qb19A8HHNqJdra/QbfQ6h0+DWBN2fOehj674aaLhHpMn9S77k7LCe4Gv
sgZuaGgoZs2ahW+//RbPPfccPvjgA7z33nuibg+fAy1btnQde+rUqWJfhgwZ
RAwVOSltqF9++SXGjBkj4qXIDdzP5c4FPMULKjwZcJfLhOQkIfnQyw7nS8uW
LcPPP/8sZPHtt98Wuc0WL14sPtf7pTzM9clXed/o5VnJsUJyQ/HT+EgWfipj
0u857Gt3XXNWT88eH+Onbm1zzcfdnquuGHaXjdghcxE756BF95m45rgQJ3dN
3KUkLT+NH5cvcn25jVlcPJuj7eLfGxcwd/IQ1P2sGPzSPosOvx0UX1Xr+0mL
f+Oeej36sPXt9cfjc3DixIlC55On8nkga6BT/9NmxbX/4cOH4/jx48JG9aDn
0X9PXqsne5ayV/kmPMmn+/g+aF4H+Rlj7vhco1weO3ZMbLTzL126FOvWrROx
+zt27BB+J+XLlxfxp4zXY21U5jtr06YNWrRoIWL+Gf/H35HTLlmyROQB5vrA
kSNHxPF5nqtXrz7wtfHVXYY9ya+SY4WHgeKn8ZHU/PSejr95yodJ3nLr5k2x
7nLbOQ6+wk/jnjmc+98fp8x23HS1zckRuN11cLV7V8Iw8tdhCIp16HXZvpRe
33eNGe45ubZbPizt+m/dcrTrltAxju/K57BjGO/ht/ZVkSNXdZhE8+66xv5h
r+VJ56ee1jjZJ9LW9CD2JXJH5ouyWCw4c+YMVq1aJfLmjx07FsOGDROxz+Sa
bdu2Ffq8YcOGqFevHpo1aybyTjFGn7mnaFOl7qdvKu1U9evXR/PmzcX36R9A
HvDTTz8JLsC11hEjRgj+SrvsokWLBI+lnfbs2bNC///btctXfVs9rbsqeAc8
rcNz3DzNj9z9nimX5JrTp08XdR2Yw5T2esog50K87xmnR18Tbly7L1WqlNiY
8/TDDz8Ussn/+RnfU2bpj8q51fvvvy82/s/ffPzxx/E2eSz+Vp4jd+7cSJs2
LYoXL47atWuL6+F1UZ5nzJghfFqsViuuXLniUR71bdTbWxVnVXhQKH4aH0nJ
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
51h8BurlVs6v5PvULrdPGhQ/jY+ktJ/KtXpHN/6FecO6oVGTjpg4ew52+BvF
urCeDyV2DfhhkFT2U/FX5orCRYzv0RbNW3bHlHnzcSAowrWWf/cRc5o+DJIs
fh9xOUz3Lh+Lr7/6AaOnTseq3Sfw901njlq9bTSpGuDxeryfn3rS9XIfbXu0
4xUoUAD58+cXOUbJSamDuDYtbU9SP6XWtc/HpfP1dirZp9TntEXT1kf7NG3X
zG3FHEH086WNUMqY3p6qH9vUAnc/aH1bmV+J68qcP9HuPGHCBOE7QU5KP0rK
spLTxye77G/2O7kq5wbMdUAfa8ot81wxhlCOaUK5FBR8G4qfxkdS8VPXGq94
dwWDfvgSrac4fBlduuD2Ldx0+mU+yhrwwyAp+Kmjbc74/Rt2dGjwOfqucBxL
5uG/c/um1rY78XKgJjcelZ/Grcs7frN66Peo2nGyMweqs6bAXdYcuIW4KUXy
Nsyb+aknXS+vibHK9Cnl2jLz6TA/PXmSXA91tz0p+1Py6Xy9PZr2aekjSV7K
2gLkY/RXZf4q+XxIjeun7vMo+Z6cnTmQmJ+Mubw2bNgg7jFyenIkJaePV2Y9
yS7HgePBjX6p33zzjcgpzNxyrHlFpPa51ZMIxU/jIyn4qev+oD8i/7kcgC9z
+cHvhbfQstsvmDZ/OYKjLgnLm2tN1PFDr7efuvjIHQevvmndgZKZ/JA2f0l0
7DMYs5aug/kcfdrvb1ty45H4qes67zrj8a+i9ycvwi9NNtRt3Q3jp83B4RA7
bt99vGPmrfw0ofVR2j24jsw8UPQhY71FyYfkOrRaD005na+fFzCemrZB2ghZ
F4g8lT6W9MOQ91Jq0ffu8yiCcyXGOz3zzDPCjrxz506xj/pP9pM7X0rpsXyS
Nvf5gJRbjg/XXlhDgLXdaE9l3lXOewl3W6qC70Lx0/h4dH6qj93mP3dhPrET
Y0YMQIMa5fB0ujTimBkzPIPXS1bAtC0G53HvPpZ76ZH46T33tt1C0P4NGD6k
D2pUfB/pn/ITbXs6Uxa89UktLDsYx6O8fX3f1S6nYfSC9TRmjB+KH5vWxnOZ
04t2pX0qI3IXLIYeM7bjliP56xNpP3XnpgT9S7mOT11B2wbrOJH7kAO5+5I+
Tj0fj1+Qc+hylQfrbGKCM/M34n1yXpM8vt4+ZNDte3x6X66j0uePvIzve/bs
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
7knel3abVcTZueRU+9xoMouav/w80h4h5m5hYaEpksvsQWRVjhF5CufErMPA
ehGcJ7NmmPtY+4KtX8EzkoKfOmKPxC8QsGctflu2E/+77fzw71BUzuWHjweu
E29vCnr0P/xcJD8+/G684zt3bj88P3V+/5/rN3D772i0L50HGd//Fn9o+/44
PA3P+uXElINnxXfEpVw8iDxZcuHnmQHOU3rmxI/CT+/p4q8cfgd3HJszbjDB
3+vsz/wd9QDPd/u+vAMP0UUJIHH81C0ngmyXzjfjv8dPryfuaG27k+Q5HB6F
nybUvrv/0j79eDvadMs5bvF/9yit8yZ+Gj8Xxx3X+ZcsWSLqBtB2wdoIEyZM
ED5gtMHpeap3rKE+2Zt77nep6yUv3bBhg6jbwWfe6NGj4423r3FTPfQcVd5P
jJthLlfGfFWsWFHkICLfIS9MKbmNPxdyjE2wwVEjSl6LXM+OlzfN+V2Da04T
6pzXxM09guPNzULjyYHrXMFxczc5b/ImWeX18/nHcdq4caPIw5srVy4xjpcv
Xxbjqn82+aKsKsQhafjpXaef6SW0LvM8/J75AAeibjo+PH8UpTP4ocYkh630
H0GP/kKnonlRuO4giDPfTawP6l3H7xGLWkXy4tMf54l3lo1DRBziklN/iPfi
Oxo/zZsxO1qNOuLYl+T8VPIQR16Tuy7u5dx3L6GcWvG5nzsfcuVwcbx5qP7x
hMTw03+/vvv3/fsx7iWbnkssP01c+3Tc9N5d3RwiadvpLfzUk36nzalOnTri
HmF9Nd4ztLsxVrpIkSKYOHGiyEFIXcKcysJuqLNdKp76+PW9nq9wn9T169at
Q5UqVZAzZ06RQ4pjS8h5ml4GfBUJza8YQ/P111+LOVb58uWFbZXzKym3epuq
ktvHJ6f6+RPHQc4dFixYIHJGkZeyFiJ/Q8hnky/PoxTi49H4qdTBMn/UPUSF
+mPPsVDclKJx5RQ+yaLpr4l6fvo3uhZ9Be/UG+KI7b/7IPZT97ymt0VeeeJG
yBq8mjkTuqx11BUI3z4W6f3yYvFJ51o+//x+WOOnOdFmzDGxL6n5qUt/O2O1
roT5Y3j/LmjWvjOWbA8U/OWuM1/BfTa1e3H5ty79n72rAI/iaMOHFC+lpT+F
UqzFirRo8RZpoUhLS3GneHG34lIoENzdobgEggYL7iFAgCS4BAkJEDt5//tm
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
DhHXGDGxXRlzmT/GnMNCb2+Q+MgwuK6biV5d+2HY6L8xZ9k+vJPSM3GFc6Tt
QRIbfMreGwlrTWpbFrpPquDSa74fyiCTHn83+ga6vD/hZgg/LmMWk8KHyijW
v5LiS15xw7/TNyEQlnLHLz619I0rW/42t0U6THbjfSNMSufs6iEshvScU9yW
QubCpbIKu079S0+MHzIZD8zt8d/ftcz4tBkemHhbJBw+5fF6SfwOz2DPetD6
y1b183adaj6eCqP33o5QPykDWRcq2vHq7hWYs4Zz9yajY/a18YVPbfFIJMSZ
5s6dm7UN+UIRl0F/U1x+MYfbmi/UeJXSU8/5ZKdKGKpbt25szid/B4pnRP45
NGcRZ0JjET1LihNPfxMvqJz3rH2Sk/bcr57f1XO82MQ8T+0ieCc6Tj5O/fv3
Z77o5J9GXDf5j9C6pEr9veg7KUGPH1tR26zZwqp0jL4HqF1btmzJvrPIToLs
eP/44w9m00LYivoqPRvqu6L/Cp5V/UzVNgKJrf9G1jcjqwvVU8R/orpTO1Cb
HThwAPPmzWMxSskXjdqN3ntqx+nTp7N01c+A2l+9JoTWV1OGOKbft/Brhkfu
KJwmA1rPPsL3ZY7QYl/5/uVj3Ljli2B2iyna2D1Q6F63/d0Unxdpglss/L4B
IcxQwIAJbc34NHs1XHrD0zRIeFfg3uf37uD2/WcWrCTnGXl7kMQOn4o4Ai/R
teqnSFegOcNhVL5QSe05o00F6D4oCld+woZNg8VP32QIx83j69C6bTcc8JZi
EBijLndMJdb4lANv7JnSxNwWObBe8jkLC+f1uLFlPGujzus4rmN2vYD87HnX
CsW66VOw6qQvu2bl4BrQfZ448KngvT2WdjPXIxPmHOT3iXZ6dGQ+q99vc9yl
PNTcu2XMNIQEwX3DFDTvOgp3JGOTqPzGYiJxjU8jszMlfoN8EKjuadOmxeLF
i3HkyBGm1ycsqS5DVO1sbbNrtDnfkK8j6VKnTp3KfHPJ1oz8qUkfTfHUx4wZ
w+LJXLhwQcZl9Ev+EwK3KrnWyOZ8W1t8zO1Rbcp5XsRpFZyo4JuEnwjVm44f
OnQIc+fORc+ePVnshGzZsjF+lPA92ZYePHhQjrcTlQ5bm+cjFzVOiqztgoOD
Wb8kG1WyVaVn8Pnnn7N5g+wB6JuOYsdT/yVbbXqebK0Iyc6S9ol7JUxHz1b0
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
0OTX5bjougnDJi3EpkXDUaJUbSw7dAVhQX5P8bUzEisv49O9e/dyPr1z506G
3YfOENlPM4+yu/20Q4cOPF5fdrpmjlBafJpmu6RdiefgKf9MZyem1Pg0K6dn
8amz8+WI9Cw+zerJ2Xwqj//zzz/zc8vqUManzuYl8yR8T4PCr+PoimE87mmT
IcsQej2Mz1e3jTM7JOuT5B8chisHl+Lt/AXRYeouxERHwC8gBFHXvTC8WR0U
r9EGh7wCEeDDODYIc3/6BC6538XaY14IZczIfFaDQ+Hrug6VDDxc78fZCI4I
g9dVH1wP88LQr6vi5eod4R4WhRB/P0RE3cTxNePw1stvYcDyAwgLCeDbn90w
HkXzvIxBS/7Goulz4eoZgnA/Txw9eNrAuQFWxxt4Hkn28WLvhh07dqB27dq4
d+9eht2HzhC795lY+dh4r+xdwOLA/u9//+N/M1OqV68ePv74Y87RLJ8s1apV
Cx999JHT8+bIVLx4cafnwdGJXbdChQrxsjH/GXnPkZxvP81sknUS2U+znrK7
/ZTZLp3pfzpz5kxel0r7qeQW57Opyvc0MhAzf6xveG4LYsK6U7geHmj0PTXG
02dxonyuISL8Gka1rIGXyn2PiwaG9L9yCYd3bsDPbb5E/a9/xb4L1xAaeA1X
vQMQEXgOrSoXRsE6P8AtMAIB10Sf+xDDtdi7YAD3dR245hhuhPjjWnA4zm+Z
hAIuhTF8zRncMuTp/IkjmD+xP+rWboAxi3cjJCwE3l5eCDfw85JhLZC/SC0M
mzwHu064G9jXn/epYv6paj9ZZ55b9peVl40pxe5DFsdB3h9Z/Rl7ltR8+t57
7/F3AXv+JP9RouSIxGJJs785JS6GNUqJT1nfXCY2xmNycnKOS+ycxMbGGvmU
xXtk7TrsPDk7b/Ym2T7F+rq4u7tnq+uckJDAy9O/f38jwzk7T45I0reMXTNn
9N+XxwkLC+NjXW7dupX/zjyMqjDntUCEXzuD1rUKw6X4h/jPLQChAb68bVw9
foCfnx8CgkLhfXwD3nnZBfkrN8GfsxZh9l9j8WvP/pj39x74hYQhyF/EVfIL
CYfXwcUoaagLPuu9DCERwibLeTgiAJPaGNilQF1sO3cNgX7XcD3MF2Pa1TPU
HQXQru8ELFsyD4N/64WhE+fD9RKzrQaLeFI+fggPuYx+DUvBJX8VTNtwFMEh
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
zSjcjIxAUIAfn+djzK9YNzj0OiLZtmwbdZn8AxEREcljQvHyGnnPsA+fawbW
jeDHDQ9l7OpjWkfJd/iNm7geHGg6Pxnod6r+fhDxuYT9m13DM2fO8LFs2Tvz
33//5deaXfOcwqZMz51P+T5MjHLTcx9GDx+B8ZMnY9zvM3Diqhz/IO1jEZ9m
PRGfpi1H8am8ZUx+czDZTrUsRo4G3rsmInfBT3E6WqxrD58+KxPiuBo8TtAi
+uwavFX6LSzzjOOLiU+JT7OaMhOfyvyo8yXrWBb7gz0vzZo14/2GGZMxG5y0
pz4PW6q6f5S3dzr7zfI2dBN38r+sLVtZ5qPap68Zx3oblj/N2zyulbcXt8U+
i/nYcb0tWN2Yb2WZ2fwMZFNpL2X+GeyZ8ff3x5AhQ3h7fqtWrRAWFsavd06y
m0o9bz4Vr0jlGb59Bp/Xa4RVZ8TLMWj3TNT8rAeCuFupToz7ncq+iE+znohP
05ZD+FTdpq5Kcp5O2f+dc0tQuFADnLwlNrOdT037T46LwpEdm7Fu42pMGjAZ
x67cFXlna4UdQIV3y2KJxwM+j/iU+DSrKbPxqTpfMg8yf4xtGNOweMFdu3bF
yZMnuS2O1SfSnzEzxKPKqcmSm1lisW3YtwSbx9ry33rrLVSqVIn31Vdf35zG
pkyO5lPTOdSJPkvs3GrEM7xlYDNUqN8bbEQuXRKbF47WFSpi0LKLfLlWk3qs
BOLTrCfi07TlOPupfJbZ/lS8yuYp+791cgEKFqyPU3bbT/Xcn5XpfthlLJ81
BvVLF4BL8S/gzofc03I+1QTtRplKZTKUTy25nPc7TGfdrq6/LPv5Oer9YCuf
Gn30lWdK9KeU51P/zHyl5Idh3M7o/+EY2cWnelVZjOXTGfsupKd8xuudju3S
q8zKp0yW11bmh8WIZJzKWIf93blzJ8+ztM9JNrK0NTqb37JbUp9TGV9fnnd2
Pdi70M3NDYMGDUKZMmVQrlw5LFiwwPgcqa+p2uaQU/S87KdyS86pfOIefqhX
GjWazRXH43yqwaRvK6Fa9zliXa0m1WPaxKc21nnqZeb1ntpOZbGezvKdZl0d
aROfqvMhj5/Outn8fWdr+VJ/ZxOfpi1H8CnnKX4J4jC63Yco/E4reImhmfk1
lXwafcpRfCoPbHi++a4TMODTynj32/HgzSEaEWtDG7wHZTOQT8340vgcQOmL
ac7sKWxtWv4cbRW28Kn6WTXVK8q9Y/a8P70d/6sqv9l2yj4dVUxb+dSSvY1Z
fap8+qe2E391RuY2naf0f5eklbfMyqdMKTGqnHfx4kV06NABpUqV4mOWT5s2
DR4eHtymymIWMVblbd8qViVOdQyXysSYlJ1jNj80NJSf+6CgIO4r3LJlS/4N
wcbqWLt2rfE+y8k2U7Ucyqeqel0TF4ndO3bD94Z4L+GJPxqVfwX1f9vGJ5MT
2XOtxZTvK+GlL4eDH1HnWPupWZ2nTX+dp56ne6pe11nU6ym909I8UynKaj5V
sfez6/SUr6N5naZe17HlIz5NW47hU73Cp/FYPKwT/vftIAQ/FMt0+ufAp8r9
oNcJOymiz+C9EgXRYfYZvliT5AQ+VX9P8p9aXHM/iV2HTuL2E1Z+fap9Mdks
o735URyPAe551QteV6/Aw9MLMY9Mx7fnbWE1n1o850wx4b7YtXsvfG/eF9tr
n44dZvZ9zX8kItD3Mk6f9TD2TXX0+88mPlV9C8vy3b8ZiD279+BKeMzT5VPV
c8by8Z8ahPpfxanTF3EzVhlbJxV2T68yO59KpcapLL/MP5VxUMmSJXl//+XL
l3NWZfFTWZxG1s6sbndWMxYxa9o8Kv9KHuXxBfz8EBYWxvuHsfPL4uqzsfHY
WEisP9sPP/zA+0GpfbKIS01yNJ/K59hr6zj+Xmk7frdY9tALDUq/jAb9tvNJ
I5+2NvBpkyHgEVcdyacp1Hn3bgRgt6HOuxqh+MelVOepyq1XOE2f8ACXjx/A
rsMnEPVQxgh/mtsS70TD+7IHrjA/b8O77bJ3AB4mpf8+s45Pny7fw9uh2Ld7
N9yDb5mXz7JuNrNViAWRAR7YuecgQu4+Vsr3NKMmx96Br6csnyc8rl7D/YTU
44MRn6Yt2/nU3LYt/WksOYXvx24+tbCjK8fRKs9k+IHZeDVXCay+Kjg0WbZP
ZRif6o2+7nxp4i0sHTkcwyfMxNyFU9Cv52icDrqvKnNKz7zekD9xvrdP+kGM
USfHV33rM5yL1hm3z0g+FbFj5bOqx/HVczCw/1jMXTEfw38biGXbPcQ+lOfd
dH5MPhiPbnth1E8t8Gaxgrw8r5b7BCtdTfeYM/lUr9eb1UUX/l2KgX1GYfaK
hfi930DMXXdarGdRPv5bKV9ybAgm/doWpUoUFuV7swqGzd5t+FqDWR1mi7IK
n0pZso6ad9i9d+jQIT52MuPUd955h4/rN3v2bJw7d47b93hfd0P5mG1Vtken
1McqJzKrWf8qVXu9TGwZq7sZjzL7NHu+N27cyMdqrlWrFj/nzN9i9erVuHPn
jvF6qe2lxKYmOYpP1e0sTEmx4di2ZTu8IsQ7AdrraFqtOOr3srCftqqAEm3G
i+97B/KpZZ13bvNiDOz7h6HOW4CRfQdiwcZzYrun6nRle2V/d70PY9yI37Fw
wRLMnDwMzVp2wprjfsZjsu2Ee208xrarzfOVJ29u/rdcg76IUuw4unScS2v4
VL5PZbk9d6/BoN4jMXPFIoweNAjTlx0V/VMU+4F6f7K84tQkYOecPzFo2CTM
Wz4bg3oOxj+uQXw92X4v2m91mNursVI+8c4uXqMTAhPEMt0z3tnEp2nLEfZT
ZUeqbxbztk3Jp1En5xv49FOcEDemYC0r7VvymdIY3nWJyeKZ3DSmGVyKf4/r
fNLUX0MTyPxPS2Oxu6gHOJ+m6962zX6qVe7Ved2aoHaHv5CgLLqwZiSq1ZT3
q/6p51G8F5S2teiL6NWxHbr37Y9+ffuiZ88emLVJYSQHsJzVfKq6ft5bxqPM
O1/h/B2Rhychh/FJhQ+w6vRNPm3Z9i8e8SisWbEUW1yvIsFwvR7d8ESXj96C
S5lv4f0g5fNhq2zlU1m+8CPzUb7sJzgQJq6c7vYFfPluLczYHZBi+cSt+Agr
RozC1DVH8dBwbpMe3cD8Xz/nY7UPWeEm9sP7NthWpqzGp1Jm9vMU+IeN387e
pd26deNt/2+88QYaNmyI7t27Y926ddyHldlV2XVkidVJjL/UvKpm1uzGrpbl
kuWV8QDYPBYfgXEoOz/svca227VrF4YOHcpt1Gwc2sqVK6NNmzZYuXIlYmJi
jNckpe8H9fUhOYZPU24rVo0Nxx/tZIz6shZqfzVd2F24XfEOelR4G53/Oijy
4MD+Ueo6L2T/LJQr1wBHI4XtUxN1Fk3eqY25BwQDqOs8aXPgk3G+6Fy/AeYc
DDbu13PLaBQpWh07/B6a5emW+za0b90WfQ31cr8+v6F7r77YdCLImLf0nElr
+VSW7/b51Xin9AfYek3E8MEDL7SoXgvjNirvPrPyQXmPi/N1bM6vKPtBZwQn
ikXRbuvxfvkG2Bcg7KjSPhbnfxBd2rRF7wGsfH3Qo2dvrNjvlWb5iE/TliPs
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
4GGTcPRyhPCR1OuMnJOarOJTpT5x3zjEsG4+zDoYyqeTlDov9MAcvo/uGz2U
fZvqdMmn83t/iBff6oBIXjjma6fEcR3ZCi4vvoX/QgULntuzGn1790CbZp/i
1dwuvI7tOGmziLOjl/emI+2nrHziXAQdmMLL8fumq3xa1ul3LqzHi4b5Lecf
VcqnNdmHFVbdNLqZYdvy2KfYXRIVrjg6qzvn1rnnRfuo59FNGNCnJzq0aIzX
87/Ij/ftsKV4JAzmqZaP+DRt2du+r1e2jTg2i/PLjH1hfFod/8vGnJnYNz4A
Ld57DZ8P2cCXsP75ojn8EQY2KYX8lbqCU5PedjuV8ag28alk9Gj8XKcQ8lfo
hBv8tGiQpBFlmdW5LlxeeBd7rov9aFL8JmbffooN6eY1jPvpc3781mNEm7rO
0i/ABlnNp0r86B3jDd+NLm9gy2XR10zyqc9Wwae/bJB1mdasXJJLE++EYfOs
cfi4yuvI+/r7mLXDTbSF653ZP8rUXnViQVdDOQpgsavwpTXy6THBpy3muvJp
raouk/u3tPPf99qGxp//DC/ZfmRH+bIrn1oqJV6V7dBPf+uI6bt37+Ly5cvY
sWMH72PFYlnVrVuX8yr7y9q5CxUqxDn2q6++4lzL7LHDhw/n48nPmTMHS5Ys
4XZHlti4Vywm1oULF3i6evWqkTdTS2wdxqcslijbjv09deoU580DBw7wNnh2
rClTpuD3339H//790blzZ86aLK/58+dHhQoVeB+mjz76CPXq1eNjizKb6Pr1
63k7Pntvyfs7JX5ny1I6XyTb5cj2fcl1a/s1Rd6SX8FHBI0ys02q+4VDTosZ
adoYreFTWecdmd3RsG4hrFAGdJR1XthBwadtFD8zc35T2HbtUN5uueiktC+K
Y8zv0xAu+d/DqVsiwxpVH5PbPifQpfE7vJ4du0W0w2nTYRuW54cpPXwqy3dp
XX/DsXJj2q5gs/LdcVuPFwzlazRRxE/QmpVP7GXhL3UM29bASWUs9iSFT4/N
YXaaPJhw9LpybnTGd3ZskBt+a17LsPwF9F16Vimf9pnlIz5NW3bZT/Umftkz
8hu4FH4fp1X2QT3M393s/mCJfadpU4m1ZLnvvX+2Qe7i9XBBNI4bn8V4/914
i9kYB280HsNYN+ssj5d6rAf1+WCyjU+j8FOtgshX/gdE8Cya7KezOteDS56q
2B8pZmiMdly9WZ5ZXnl/EtEohOk//A95i3wOr0diXa2T+HT7mG9Em4+7+O6X
fOq7Vdwzv24S+9JY2Apl2Z5EB+O/NcsxftBPKPMK82GogJVnn+5XZY/s4VPX
uT8ayvEyFh4V28nzFHlskfhGWHhCOYZFfSPbb1gsXn6qHmDm4B6Yt9dfVTbb
7cM5hU9TkppHZR8rdl3U/qvq66v2Z2Xsyuyh7H3NbJJz587FuHHj0LdvX86x
TZo04ezKnm3WTs4S49kPPviAt53LxDg3PUlux/6yxHxo5T5Z/NcCBQpw3wTG
pKxPGIu3xeyhxYoV4/ljeWV21pT4x9I2ysqnZlFqt38+cgif6lV2lqQQtCj3
Eqp2XiYWKW3Aaj9F5geVrLyvTO3DaR/LOj4V04dndOCMuUxhTBOfzuX76LDs
rLJvVZuRLIsmBmPa10ORqk2xet9J+AeH4vLRDaj5Rm4UrvSj0ceP5Ss5WWNi
78RQdKpWAqU/GSz8u9Lp+2QLn15c3Zez4pQdgWblu+u2gdtPP5uyl08/zad6
LOjGOPM9HBcFMfHp3J7cBjxZ8Q1gPhFJSvmkjar/pxVQrEpXiLP67PIRn6Yt
++ynpr4lP9Z9A2U/GwfeE0aJTW5PfamX1zveH1+XyoP3uiwV8zUG5lTYb02f
z/i3zKQ9pv7V9oKOrXyqePTgt/qvI1+5jor91MCbyt8p7WrCpUhtnOduDfqn
+wTpTT7o/JoovjKPrmxF1Xc+wJ4QybUZzaeiZAdmtBP2Uw/hWCT51HPTaH6O
/tivtIs/83vY1K4U5roUhQzbNOsr4qno0+ibml7Zw6cXVvfmPkmLj4r6QZ6n
UMWW0PNvd3EMdfnM3iviHLr+uxBj14h2I51Oa/busUU5mU9TUkrMKpNs006P
/VAuY9uwWEuMZ8PCwuDp6cntpszn09XVlfeH37NnT6pp9+7d3FbKnie2HfvL
7Kpsv7dv3+b+tOpjyr9xcXG8fz3jVManTLJM0h5qGnPNnEXTKh/JfjmkfR+m
/sEPfbfhDZdc6LvpMp8WdYlj246ssZ+eWcbaqgtjhTLguKzzAvdM5/vou+WK
Kp+qPchvciTh3PaVGDl0CJbsPINw9+0oZ9iu6dgd4rhardk7TcYl9944GuXq
toVwATCP8f8sWdW+r5TPe+sIzgdTd5r7bN06s4qXr/0SxeagVfOp2Peq/p8a
1qmOkxHm9tMD07px++9Sj3umc2Pxzr5+YA7KV/8SlxUftmf1/yU+TVs286ne
9NwlBOxFWWZjWiD87cT3Vlr3nLndkPkuq/u+SZa5e2EdCjI+2CT4IFG5x0PP
bUeH+uXhUuwTuCrfOI7oB24bn5rab9YPbAqXoh/iovg4BA9lh4fo+VkZFKn9
G7j1UfFDYDGy1L7ZzG/GaG/TaXj/Ttw6jS8+74Rzwt0lw+2n8jpEnliEvIZn
feJhcW8kCscFHFzAntd3cDBU9NHXSBuX0T5u+IZOFrFxNYZrLOzJ99GzTiU0
7LRGrONEPpX38IMrm3n/qP7/iHeH7CtwcRPz0XoTmzxljDLz8qntEX4n/sPU
RftEn32tJtWxtdIr4tP0ydIHQMSiM7V7W7KemvfU22dEnlgekpR67MiRI7yO
Ye+mrVtFnxnLcUVJzpGj7KdGe+Xk1nDJUwsnlDZjXoc46Pra0j/qrvt6vGLg
5SHbvfm0rPPO8nbxt7FVCSbwdJ2n2FGV/Cs4iLUDG8Pl9U9w9rZeKZ+O24O1
yrOm00o+XIlPmw9Poa/ws2UNn8r+UQlBe3n7atflgkuSlWfu2l7mk1YUy07f
MuZTpxV2Xo1SGM+Nv/N1Vl8V9b70r105/Eu4FPgUnkpsxGSNqXwyFsNj722o
3/Q3hKpivjyrTMSnqcse+6nczoP7WZfF9mvxhot9H/fizf2krMmL2MbERb47
J3F7+p+KDzdTtM8xTF+zEVN++gzlPv0FNxgrc3ue/W1ctvCpOr+xZ5fgpfwl
MP9MDJ/Ph5B4cAX1S+RF2znie01r2UZs3AuMZZD2uCs7Z6L76LXpitGcHlkd
X0rasROC0LTSK/h0xE4+P/6xeNantayM4p8PVWLRP50/9TtaxKxlU4kY1bIJ
+q8UfY7s91UWsje+VOc6xVCl+yo+9eSRiOuy6pd6eOWDbhCfBzpTfy6FO2UM
vBuXXLFs2S7EicAtxuMmJdtXNuJT+2XZBv6sJPlRzZHWJMvt0zqevF9Zny9W
z7z00kuYPHmysa/9s/wYSBkjh9hPjWNwx2PIx2Xwyv96QrjA2d9XQi1r40uJ
UN030f79IqjRW/TriFfqvKU/1kZhQz7vpZBPc5tSsrE/8uW//0Bhl9cxfbfo
J6tVbMPm7zQxtW3WYIxaaRFDMQ2ln0+VOpOvEoe+Dd7C2+3m8vkJj8W1+3fQ
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
lqziUzxd5z1Vp6dV5xm/uUVbuvF9Z1HfG3+rjmVL2a3j09TqdL1F+ZS/6jKq
bE1q/9in3utmZRVbW5YvVQsd8WmasplP1fenLuVxX9I4sun66R5i74KZGDdt
m+j7rH+6b61WPgOq971Oa8FvDnjU7eFT9XLpA2N5XtTPjTr/ZuV8juO+2MKn
xrzLfCvXW6c3PdWW18roe6w3jwNk9u3p4PerrXwq11PbUY15FUufWT59qv1o
nq6zrRXxafaWZTs/i8XP6hw2liuzx7OYqmyajS3A4lUxUXt/xsgRfGrOOuId
9jy/zdPLp/L4T9Xp6ajzjOXRmL+T1e/mp8ptZ91vLZ+alY/7AavqdDV7m9Xj
T9t/9RbvO2WmQ8pHfJq2HGE/tfHAyr3wBBd27sXRU16IV98bTqp27eXTzC5b
+TQryB4+zawiPs3+kveovH/Z2Fas3mHjCbBlLVu25NMsViobL0uuS4z6fOVo
++nzlC18mpVkC59mdhGfpi2n8akpA2Zt986uc4lPs66IT0lZWfJ6MgZiY1Cx
uofxBhNj1Vy5cqXqk5rV7/XMJuLTzCPi05wp5/GpuZ09M7Cp+tjEp1lPxKek
rCrLdv5Lly7xuqdKlSrGdv29e/fy8VDZfBYzVR0nNTPUndlNKfEp8xFmSine
rTOTHO/h4MGDRj6NiBBxj+RYuNkhMT7NbOfe1iT9ApiIT1NWSnwaHBzMp7PL
fWBtYmJjD6r5VD7/zs6bvUmWg7EOG8sxO11nyd6MT2Xd7Ow8OSJJ7iY+zd6y
ZFQWq5/VP/379zeuc+3aNe6byuazdxobl5WJ2vsdL7KfZh5ld/tphw4dkD9/
/mx1zRyhlPg0NDSUT+fEc0T206yr7G4/Zf24iU+zt9Tt9ImJicZ2/kOHDhmX
s2/nLl26GOOkyu9MaSeT65Hsk5pPmR2bnW/Wf+3ixYs4f/58pkpnzpyBt7c3
5s2bx/PJ4uju3r0bHh4eSsw75+fREalVq1ZOz4MjE7s2zKe8UaNGnDfke4vq
diH1++/PP//kPk7u7u68Drx9+zZvW8pJKSYmBrGxsZwBChUqxJ91FuclKiqK
2yrYcmfn0Z5069Ytfs2HDh2KEydOID4+PttcZ1Y2xt+9e/eGl5cXv4ez+vVi
KTo6GgkJCfyasRjuxKfZV5Y2VMYXLBYq4yP2zSyXsfVYfc04hNVTGzduNC4j
RnWM1HxatWpVY581dt6ZLSczpQkTJmD69Ono2rUrzyf7jmXxdKdMmeL0vDkq
TZo0CXXr1jX+dnZ+HJWmTp3K7fNFihQhPrWQJZ+ye5vVh6zey+lJjjcov0ez
U2LfIawOc3Y+nlfZnJ0HRyfWXsfuw1dffRVBQSJGMNVh2VPShirbAxgTsWvP
2gWY2DeYrLP37duHN99807hc7ZOq3hfJelH7fuZRdm/f79SpE7XvpyD1Odq/
fz969erF/Z369OmTo1Pfvn15fS+Ts/Pj6MSuMSujs/NBZUtfkuUZOXIkt6cy
UR2WfWWMlazUz6z9j3EH41EmxiOSSZhPas2aNfnyZs2a8XYEuQ75pNqulPiU
tclIP372nZBZkuRm9g6XfCrbWZifiLPz56jUs2fPTHfubU2sHLI/SOvWral/
FIlEIpEyvSzb+S9cuMC5o2LFimbfJ5JR79+/z8ecYuswlmLrM5FPqu3KCPup
+vuBjxGaQoz49Ijsp1lPFF8qfVI/h88eC4cSJUqZIZFNLGfIMm4/8y9k7MHs
6EysvjaO7aO8z+bOnWv0CVm7di2fp15O7f3p13PnU71q/CbVb1v2THya9UR8
ap3UbUqUKFHKvImUM6S+5oxBvvzyS84fO3fu5MsZezKpbamsjbdkyZJ8veHD
hxvbEOnbxjrJc5QR9lOdLhmPH91HRGAEHvPLaN1zTnya9cTKQXxKIpFIpKwo
NSMx+fj48Dg0FSpU4HE31MskwzKFhYXh448/5qzSpEkTo08A+aSmX8+bTzmf
sB/JD3HF7TB+7/EdylVtDT8+BIAOWuJTo4hPSSQSiUTKXFLbT5lkjEsWR43J
0i4qbaosHlXnzp2NfqssbicT+aSmT47mU/U1kr4ZbI4uWdi3Lyzqj3Ilm8Kf
h6jW8Tb/9Ir4NOuJ+JREIpFIWV3qdn727vrmm284h+zZs4cvl3wi392SWVma
P38+j5v70ksvYfny5cblxKipy+F8KjY0cqnxeirXznfdcFQu9RWucVzNSD61
8B+yokQZ5XdkL5+a59PW7RxbRuJTEolEImV1qbmTydfXl7/PKlWqZIwnZcmb
sr8r04EDB1CsWDHOLmycBxZzSO6P2vtTlsPb941spMX9uDgk6jilQquwpdea
IahU8kv4ZQifyrzolXGUlXtAGVP52X21TIym5/eXiDcg7fbG/VjFuWnLej7V
m10/dfl4nsVOU8yj6XlQrauetiG+Qoo5JD4lkUgkUjaQfB9KFlm0aBFnkW7d
uvFptc1UzZxyfX9/fzRu3Jhvw+yv8l1IPqkpy6F8qvK7CNw/C3kN16D7nKN8
WpMo2ve9M4xPzRmT/dTpkvDgwQMkaPUinsAzOFN9n6T4W6d/LveStXxqWT69
PhlxhvI90YhzkVr51DEVmJLiHyL2/gMkJrNtlVgLCqPaWybiUxKJRCJlF6m5
6euvv+Y8sn79ej5P3c6fEqM+evTIGCe1VKlSfPxvuR0xqrkczaeSOe5dO4KO
rTtizdEAPq1N4g6nGcanln3u4oLcMWfs7/i5768Y9MdMuPnHmi23LKtemf/k
xlWM69kchQvmQ5E33sPgmf8g6oEST8LB95A1fKpmU57PCG8smTgGvxjK12/k
FJy8YoofrEcK5ZOMmhiDPesX4o9B/QzH7Yvho/7EllPXjPu2t4jEpyQSiUTK
LrJs5/f29ubvtbfeegthYWF8nmWsU/N2TrFszpw5nGFYLIA1a9Y8tZzimDmG
T9X2OD7mF2sDV38HMLuqRrmWGcinep04ZlLwMTSp+T/M3xfMpyOOLMf/6rbG
qTDF/0Onvg/0RubT3/bDiG6/YvTsVThwZD8Wju6O1wzHrdpiHKJt6N+Vlqzl
U1k+3HLHd3XrYeKmK3zyrtsWNKjTDLu9HqjKZ76tlhdRg2VDf0Dn31chXln2
MPQIvvigIRYeE+Nymdr6bS8T8SmJRCKRsoss2/lXrFjBmaRjx4582tg3PIX2
V3Wc1OPHj6N06dLGmP8UJ9Vcz9P/9ElSgoFVlf0rfHp11WBULPkFfBP4XKUd
OX3HsZZPBYMlYtx3NVC56Z9gOdDEi+s/s+V7qNp6AgQma42MbdoOOLVlFba4
Ck7TJIv8n1raw3Dswlh4NJJPa7WOYyxr+VQeekG3T1Cy3iA8YkV5Iph7zS+f
oGzj/rjPV9aaxkZgk5Jro07iwyqVMP8SC/alx6Mnwsa94Nc6qPrbYv5bp3pO
bC0T8SmJRCKRspPUffmZWrRo8cx2fvU28q86TmrdunX5tk2bNsXNmzf5fGJU
B9tPk+5hx9pZGDRoGHp1bImeM7aI5QYekv33/TaMRo2KLRDEpxg3pT+vVvGp
wmCJwQdR3rBum4Un+HSS4mdwYlVvwz4q43CQyYZqVpbkBAR6e4J7AWjYOPKJ
fH5yyF685lIQf/zjLbZTbPyOkFV8Khkzxg2187qg0YT/+GSy8v3ltWO0oXwl
8c+l+0o+dWbb8r0/8MSHpV/Gx/3EGGz8FGivo/NH1TFgzUVlO+JTEolEIpHU
svQhDA4OxquvvsrHjUopbr/ldrK/NdPjx495LFXGNSzu/4kTgldyepxUR/Kp
/sk9XDjvigVDmhvOcz78tVO0pwvbow6xkX6Y2e1L5MtTGjO3n8X9+GSrjpN+
PtVzux+T787xhnVzY9Iufz6dlCyOGbBHjKM7fJfwtdSo+rCb9ftX7MGSB5/4
/IPX36yH3YGSa51hP2XlE+ci8uQCXo4Bq934dLISZ/bW2VV8/s9rzivl05rK
x58LMbV/rngmmv++BvGGdXZN748fRiwFHz5Bb7//AvEpiUQikbKjntXO365d
Oz6t7s9vuV1KPqksTirbPrU4qTmJUx3Wvs+YJ1mcQ9fZv+DFInVwIoYvQLJG
7Mdr/7+Y/tcMLFo0D9NnL4dvtDhOehnIGj6V/q6u8380rFsIK06J+GTJCp+G
H5rL99F28Sll35LfVH3bdaY4SzI+1pHZ/dGo+xzwKZ19tkVLWcWnSvk8/h7E
+XvqziCz8t1124AXDeVrNHE3n9ZqTHwq/RiEyViD/2Z15+uWrFgfU5Yd534Q
9rbrq8tEfEoikUik7CjLdv6WLVtytvjnn3/4tLSRpvQ+VfOXXI/xTdmyZfk+
Bg8ebOSxnNje7zD7KYubyXcUhS51XkPpzyeCk5Kqr5S9so5PxfThmT8Y1n0F
y05G8WnJb2EH54jvnCVnlH1rn46kZOwjrxVjtN73xM/f/4xDFj4BjpI1fCr5
++KavoZyvIApOwL5tCzfHbf1eMFQvsZ/irEtLPlU8LeYE3hyFwZ3bYOKxfIg
T+kPsfq0sHub+v7bVybiUxKJRCJlR1n25w8MDEThwoVRqFAh/psptTb6lHxS
Q0ND0bBhQ84on376KSIiIvj8nBaDyiH2U1X7tybSFVVyuaDVvONimjO/WI21
STN+Eklj3sc/HbLFfnpsbmfen2nlKRFvSfJb6P7Zov17/SVl3zpzPpX9vAzc
LXb1GCvnjMG8A95KWVKO22SPbLKfbhjA7afTdgWblS/m/FrOp83nHlHKZ96+
r1P8US9tmYFWnf7i/ajuXdmNxmXywyVfZWzw5MZv6r9PIpFIJFIqsmznX7p0
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
JTzGsY3LsW77cTxI4kt4HyKxjkOzni45gk9l/P2gs3uwePHfCIrho7KqykX2
UxKJRCKRSJlbOZFPzWQRD1T+doYcN34UTHFM1bFNndDzi/iURCKRSCSStcqJ
fKrmNa0m2bCtVjUelPPK7Jj++2J9nVZj2J/GaXZTU5aIT0kkEolEIlmnnMin
mVUOtZ9mEhGfkkgkEolEslbEp5lHxKckEolEIpFIxKeZScSnJBKJRCKRSMSn
mUnEpyQSiUQikUgmPo2Pj+d8+tVXX/HpxMREzkuZKTGGZvr++++NfLpnzx4+
LyEhwen5c1T5Bg8ejICAAP7b2XlyREpK4sG7+P1FfEoikUgkEiktqe2nJUuW
RIsWLfg0s0dmNn5grMNE9tOsI7KfkkgkEolEslaSTx89eoR3330XhQsX5oz6
9ddfo1mzZpkqsTy1bNkSb7zxhpFP69atm2nza0v5WFnKlSuHRo0a4dtvv3V6
nhyVvvvuO+TOnRvFihVDbGwsv+eIT0kkEolEIqUkyacPHz5E9erVOfO98MIL
Rv6jRMkRKVeuXPzv66+/jnv37vF7jviURCKRSCRSSiI+pZQRifiURCKRSCRS
eqXuH8XalT/44ANcvHgRrq6uOH78OE6cOJFp0tGjR+Hp6YmGDRsauWfatGlw
d3fHsWPHnJ4/R5TPw8MD7du3x6ZNm3Du3LlMdw2sTSz/LJ09e5azaaFChcj/
lEQikUgkUqpS948qVaoUmjdvzqepf1TGi/pHkUgkEolEIj07vhSLCcSYLzMl
FkOKSR1fau/evXwei4fl7Pw5qnwsvlRgYCD/zZjV2fmyN0nupvhSJBKJRCKR
0qOMjc/PbGnyr54fQ6sVx+d2tjS2Jvtp1hPZT0kkEolEIlkrGj8q84j4lEQi
kUgkEilj+VSwCvuhxf07kbhw7CjOuikcZshHWscjPs16Ij4lkUgkEolkrTKO
TxmnKLGsovyxf9dK1CleCO3G/yfyoU27PxbxadYT8SmJRCKRSCRrldHt+8Lv
lP16jCE1y+OH8XtEPtJxPOLTrCfiUxKJRCKRSNYqo9v3YeTTBxj4flm0H7tL
5EPz/PlU7p/9ZeXWqXwK0jq2ej1mB07vdtbIVj61rVzmfdWsPR/pFfEpiUQi
kUgka+UU+yk/ZBwGvV8mw/jUxF06HjNAHknPuezZTGacxxjOcE40LJ/KtKNP
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
    "], {{0, 525}, {680, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{489., Automatic},
  ImageSizeRaw->{680, 525},
  PlotRange->{{0, 680}, {0, 525}}]], "Text",
 CellChangeTimes->{{3.739825384367751*^9, 3.739825384374673*^9}, {
  3.7398254145341463`*^9, 3.739825424405411*^9}, {3.739825465837337*^9, 
  3.739825559139292*^9}, {3.7398256118551817`*^9, 3.7398256922401648`*^9}, {
  3.739825741329471*^9, 3.739825760880368*^9}, {3.739825924828109*^9, 
  3.739825934320303*^9}, {3.7398259666243067`*^9, 3.739826020245174*^9}, {
  3.739826187648551*^9, 3.739826216531418*^9}, {3.739826825488327*^9, 
  3.739826871936975*^9}, {3.7398380430451736`*^9, 3.739838061443103*^9}, {
  3.80120913065298*^9, 3.801209193855136*^9}, {3.801209228067114*^9, 
  3.801209240928162*^9}, {3.801209281324597*^9, 3.801209350357085*^9}, {
  3.801209383359417*^9, 3.8012094191837482`*^9}, {3.801209545677033*^9, 
  3.801209548579097*^9}, {3.801209656559547*^9, 3.801209675184885*^9}, {
  3.801209723666337*^9, 3.8012100656944103`*^9}, {3.8012101014359083`*^9, 
  3.801210113471075*^9}},ExpressionUUID->"e5eeb54d-ab68-4347-b6cf-\
80c96bebe8ed"],

Cell[BoxData[{
 RowBox[{"The", " ", "network", " ", "has", " ", "five", " ", "nodes", " ", 
  RowBox[{"(", 
   RowBox[{"random", " ", "variables"}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Difficulty", " ", "of", " ", "a", " ", "class", " ", "taken", " ", 
  "by", " ", "a", " ", "student", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0", "=", "easy"}], ",", 
    RowBox[{"1", "=", "hard"}]}], ")"}]}], "\n", 
 RowBox[{"Intelligence", " ", "of", " ", "the", " ", "student", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0", "=", "low"}], ",", 
    RowBox[{"1", "=", "high"}]}], ")"}]}], "\n", 
 RowBox[{"Grade", " ", "achieved", " ", "by", " ", "the", " ", "student", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"1", "=", "A"}], ",", 
    RowBox[{"2", "=", "B"}], ",", 
    RowBox[{"3", "=", "C"}]}], ")"}]}], "\n", 
 RowBox[{"SAT", " ", "score", " ", "of", " ", "the", " ", "student", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0", "=", "low"}], ",", 
    RowBox[{"1", "=", "high"}]}], ")"}]}], "\n", 
 RowBox[{"Letter", " ", "of", " ", "recommendation", " ", "by", " ", "the", 
  " ", "teacher", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0", "=", "False"}], ",", 
    RowBox[{"1", "=", "True"}]}], ")"}]}]}], "Text",
 CellChangeTimes->{{3.739825384367751*^9, 3.739825384374673*^9}, {
   3.7398254145341463`*^9, 3.739825424405411*^9}, {3.739825465837337*^9, 
   3.739825559139292*^9}, {3.7398256118551817`*^9, 3.7398256922401648`*^9}, {
   3.739825741329471*^9, 3.739825760880368*^9}, {3.739825924828109*^9, 
   3.739825934320303*^9}, {3.7398259666243067`*^9, 3.739826020245174*^9}, {
   3.739826187648551*^9, 3.739826216531418*^9}, {3.739826825488327*^9, 
   3.739826871936975*^9}, {3.7398380430451736`*^9, 3.739838061443103*^9}, {
   3.80120913065298*^9, 3.801209193855136*^9}, {3.801209228067114*^9, 
   3.801209240928162*^9}, {3.801209281324597*^9, 3.801209350357085*^9}, {
   3.801209383359417*^9, 3.8012094191837482`*^9}, {3.801209545677033*^9, 
   3.801209548579097*^9}, {3.801209656559547*^9, 3.801209675184885*^9}, {
   3.801209723666337*^9, 3.8012100656944103`*^9}, {3.8012101014359083`*^9, 
   3.801210172086334*^9}, 
   3.804896473558509*^9},ExpressionUUID->"5a85e222-3bcb-449f-b457-\
c28eb57b3431"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"GWR", " ", "Mathematica", " ", "Distributions", " ", "Chain"}], 
    "-", 
    RowBox[{
    "Rule", " ", "Method", " ", "for", " ", "Directed", " ", "Acyclic", " ", 
     "Graph", " ", 
     RowBox[{"(", "DAG", ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"https", ":"}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "questions"}], "/", "128945"}], "/", "problems"}], "-", "encoding", 
      "-", "a", "-", "bayesian", "-", "network", "-", "with", "-", "just", 
      "-", "five", "-", "nodes", "-", "using", "-", 
      RowBox[{"probabilitydistr", "?", "noredirect"}]}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "&"}], "lq"}], "=", "1"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Nodes", " ", "without", " ", 
     RowBox[{"parents", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "prior", " ", "probability", " ", "of", " ", "Difficulty", " ", "class"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distD", "=", 
     RowBox[{"BernoulliDistribution", "[", "0.4", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "prior", " ", "probability", " ", "of", " ", "high", " ", 
     "Intelligence"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distI", "=", 
     RowBox[{"BernoulliDistribution", "[", "0.3", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Conditional", " ", "distribution", " ", "of", " ", "the", " ", "Grade"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"cpdG", "[", 
      RowBox[{"i_", ",", "d_"}], "]"}], ":=", 
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", "=", 
         RowBox[{"Plus", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.3", ",", "0.4", ",", "0.3"}], "}"}], " ", 
            RowBox[{"Boole", "[", 
             RowBox[{
              RowBox[{"i", "\[Equal]", "0"}], "&&", 
              RowBox[{"d", "\[Equal]", "0"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.05", ",", "0.25", ",", "0.7"}], "}"}], " ", 
            RowBox[{"Boole", "[", 
             RowBox[{
              RowBox[{"i", "\[Equal]", "0"}], "&&", 
              RowBox[{"d", "\[Equal]", "1"}]}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.9", ",", "0.08", ",", "0.02"}], "}"}], " ", 
            RowBox[{"Boole", "[", 
             RowBox[{
              RowBox[{"i", "\[Equal]", "1"}], "&&", 
              RowBox[{"d", "\[Equal]", "0"}]}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.3", ",", "0.2"}], "}"}], " ", 
            RowBox[{"Boole", "[", 
             RowBox[{
              RowBox[{"i", "\[Equal]", "1"}], "&&", 
              RowBox[{"d", "\[Equal]", "1"}]}], "]"}]}]}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"EmpiricalDistribution", "[", 
        RowBox[{"p", "\[Rule]", 
         RowBox[{"Range", "[", "3", "]"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Conditional", " ", "distribution", " ", "of", " ", "the", " ", "SAT", 
     " ", "score"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"cpdS", "[", "i_", "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", "=", 
         RowBox[{"Plus", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"0.05", " ", 
            RowBox[{"Boole", "[", 
             RowBox[{"i", "\[Equal]", "0"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"0.8", " ", 
            RowBox[{"Boole", "[", 
             RowBox[{"i", "\[Equal]", "1"}], "]"}]}]}], "]"}]}], " ", 
        RowBox[{"(*", 
         RowBox[{
         "probability", " ", "of", " ", "a", " ", "high", " ", "SAT", " ", 
          "score"}], "*)"}], "}"}], ",", 
       RowBox[{"BernoulliDistribution", "[", "\[Theta]", "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Conditional", " ", "probability", " ", "of", " ", "the", " ", "Letter"}],
     "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"cpdL", "[", "g_", "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", "=", 
         RowBox[{"Plus", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"0.9", " ", 
            RowBox[{"Boole", "[", 
             RowBox[{"g", "\[Equal]", "1"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"0.6", " ", 
            RowBox[{"Boole", "[", 
             RowBox[{"g", "\[Equal]", "2"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"0.01", " ", 
            RowBox[{"Boole", "[", 
             RowBox[{"g", "\[Equal]", "3"}], "]"}]}]}], "\[IndentingNewLine]",
           "]"}]}], "}"}], ",", 
       RowBox[{"BernoulliDistribution", "[", "\[Theta]", "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distB5", "=", 
     RowBox[{"ProbabilityDistribution", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"PDF", "[", 
         RowBox[{"distD", ",", "d"}], "]"}], " ", 
        RowBox[{"PDF", "[", 
         RowBox[{"distI", ",", "i"}], "]"}], " ", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"cpdG", "[", 
           RowBox[{"i", ",", "d"}], "]"}], ",", "g"}], "]"}], " ", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"cpdS", "[", "i", "]"}], ",", "s"}], "]"}], " ", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"cpdL", "[", "g", "]"}], ",", "l"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"g", ",", "1", ",", "3", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "0", ",", "1", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gwr", "=", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#2", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", "#1"}], "}"}], ",", "#1"}], "}"}], "&"}], 
       ",", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Probability", "[", 
             RowBox[{
              RowBox[{"#1", "\[Equal]", "k"}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"d", ",", "i", ",", "g", ",", "s", ",", "l"}], "}"}], 
               "\[Distributed]", "distB5"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "#2"}], "}"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"d", ",", "i", ",", "g", ",", "s", ",", "l"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Inference", " ", 
     RowBox[{"examples", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gwrIe1", "=", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#2", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "@", "#1"}], "}"}], ",", "#1"}], "}"}], "&"}], 
       ",", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Probability", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#1", "\[Equal]", "k"}], "\[Conditioned]", 
               RowBox[{"i", "\[Equal]", "1"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"d", ",", "i", ",", "g", ",", "s", ",", "l"}], "}"}], 
               "\[Distributed]", "distB5"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "#2"}], "}"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"d", ",", "i", ",", "g", ",", "s", ",", "l"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Probability", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"g", "\[Equal]", "1"}], "\[Conditioned]", 
        RowBox[{"i", "\[Equal]", "1"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"d", ",", "i", ",", "g", ",", "s", ",", "l"}], "}"}], 
        "\[Distributed]", "distB5"}]}], "]"}], "\[IndentingNewLine]", 
     RowBox[{"Probability", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"g", "\[Equal]", "2"}], "\[Conditioned]", 
        RowBox[{
         RowBox[{"i", "\[Equal]", "1"}], "&&", 
         RowBox[{"d", "\[Equal]", "1"}]}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"d", ",", "i", ",", "g", ",", "s", ",", "l"}], "}"}], 
        "\[Distributed]", "distB5"}]}], "]"}], "\[IndentingNewLine]", 
     RowBox[{"Probability", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"g", "\[Equal]", "3"}], "\[Conditioned]", 
        RowBox[{
         RowBox[{"i", "\[Equal]", "1"}], "&&", 
         RowBox[{"s", "\[Equal]", "1"}]}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"d", ",", "i", ",", "g", ",", "s", ",", "l"}], "}"}], 
        "\[Distributed]", "distB5"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
        "Result", " ", "derived", " ", "from", " ", "samiam", " ", "model"}], 
        " ", "..."}], " ", "samiam", " ", "is", " ", "freely", " ", 
       "available", " ", "at", " ", 
       RowBox[{"http", ":"}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"reasoning", ".", "cs", ".", "ucla", ".", "edu"}], "/", 
         "samiam"}], "/", "iframe"}], "/", 
       RowBox[{"download", ".", 
        RowBox[{"php", "?", "s"}]}]}]}], "="}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samiam", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.6", ",", "0.4"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.7", ",", "0.3"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "3", "}"}], ",", 
         RowBox[{"{", "3", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.362", ",", "0.2884", ",", "0.3496"}], "}"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "4", "}"}], ",", 
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.725", ",", "0.275"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "5", "}"}], ",", 
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.4977", ",", "0.5023"}], "}"}]}], "}"}]}], "}"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"samiamIe1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.6", ",", "0.4"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.0", ",", "1.0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "3", "}"}], ",", 
         RowBox[{"{", "3", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.74", ",", "0.168", ",", "0.092"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "4", "}"}], ",", 
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.20", ",", "0.80"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "5", "}"}], ",", 
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.2323", ",", "0.7677"}], "}"}]}], "}"}]}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.739825384367751*^9, 3.739825384374673*^9}, {
   3.7398254145341463`*^9, 3.739825424405411*^9}, {3.739825465837337*^9, 
   3.739825559139292*^9}, {3.7398256118551817`*^9, 3.7398256922401648`*^9}, {
   3.739825741329471*^9, 3.739825760880368*^9}, {3.739825924828109*^9, 
   3.739825934320303*^9}, {3.7398259666243067`*^9, 3.739826020245174*^9}, {
   3.739826187648551*^9, 3.739826216531418*^9}, {3.739826825488327*^9, 
   3.739826871936975*^9}, {3.7398380430451736`*^9, 3.739838061443103*^9}, {
   3.80120913065298*^9, 3.801209193855136*^9}, {3.801209228067114*^9, 
   3.801209240928162*^9}, {3.801209281324597*^9, 3.801209350357085*^9}, {
   3.801209383359417*^9, 3.8012094191837482`*^9}, {3.801209545677033*^9, 
   3.801209548579097*^9}, {3.801209656559547*^9, 3.801209675184885*^9}, {
   3.801209723666337*^9, 3.801209952765794*^9}, {3.801210208616662*^9, 
   3.8012102157902117`*^9}, {3.8012103835776463`*^9, 
   3.8012104527131443`*^9}, {3.80121051779812*^9, 3.801210537352581*^9}, {
   3.801210616080811*^9, 3.801210625642638*^9}, {3.8012106567125177`*^9, 
   3.8012106621180058`*^9}, {3.801210720027289*^9, 3.801210733001917*^9}, {
   3.801211036592647*^9, 3.801211103415803*^9}, {3.801211761485097*^9, 
   3.801211820068336*^9}, {3.801446897974372*^9, 3.8014469054522963`*^9}, {
   3.8016464175243998`*^9, 3.8016464348143473`*^9}, {3.804888506529513*^9, 
   3.804888968934005*^9}, {3.804889003304558*^9, 3.80488901645229*^9}, {
   3.804889054236298*^9, 3.804889075808457*^9}, {3.804889134869069*^9, 
   3.804889266183741*^9}, {3.804889378063986*^9, 3.8048894182656717`*^9}, {
   3.804889497422101*^9, 3.804889498333799*^9}, {3.804889537577592*^9, 
   3.804889628146913*^9}, {3.804889862617834*^9, 3.804889863406829*^9}, {
   3.804890242224698*^9, 3.804890340968933*^9}, {3.804891599826652*^9, 
   3.8048918984228897`*^9}, {3.8048919444628963`*^9, 3.804891966544359*^9}, {
   3.8048919965989027`*^9, 3.804891997287272*^9}, {3.8048923270310793`*^9, 
   3.804892421257756*^9}, {3.804892481119343*^9, 3.804892483531164*^9}, {
   3.804892580517778*^9, 3.804892585808526*^9}, {3.80489281177752*^9, 
   3.804892819360786*^9}, {3.804893028491269*^9, 3.804893054113523*^9}, {
   3.80489341055518*^9, 3.804893426573099*^9}, {3.8048964413702393`*^9, 
   3.80489644236526*^9}, {3.804896479203228*^9, 3.8048966472306643`*^9}, {
   3.8048966966186857`*^9, 3.804896744991837*^9}, {3.804897422900104*^9, 
   3.804897463619871*^9}, {3.804897508033855*^9, 3.8048975846277847`*^9}, {
   3.8048978591510353`*^9, 3.804897980575985*^9}, {3.8049063400441732`*^9, 
   3.80490635380232*^9}, {3.804908317030472*^9, 3.8049083199520617`*^9}, {
   3.804908356375313*^9, 3.804908376767675*^9}, {3.805045609245109*^9, 
   3.805045630118834*^9}, {3.805063957811252*^9, 3.805063976960648*^9}, 
   3.805422042624178*^9},ExpressionUUID->"af515ff7-c124-4d23-8d97-\
4d2ac6504343"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
   "\"\<Comparison of Bayesnets (samiam & Mathematica Distributions \
Chain-Rule) with Exact Computation & Belief Propagation in Markov Undirected \
Graphs\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"Larger", ",", "Bold", ",", " ", "Red"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", "\"\</home/stuart/Documents/mathematica/pgms\>\"", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataDirectory", "=", "\"\<beliefPropagationTestData/\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "beliefPropagation.wl"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "Automatic", " ", "creation", " ", "of", " ", "factors", " ", "from", 
       " ", "SAMIAM"}], " ", "..."}], " ", "note", " ", "that", " ", "factor",
      " ", "renaming", " ", "is", " ", "required", " ", "here"}], " ", 
    "..."}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gradeNetworkSamiamFile", "=", 
   RowBox[{"dataDirectory", "<>", "\"\<gradeNetwork.net\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gradeNetworkFactors", "=", 
   RowBox[{"renameFactors", "[", 
    RowBox[{
     RowBox[{"Last", "@", 
      RowBox[{"convertSamiamNetwork", "[", "gradeNetworkSamiamFile", "]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<gradeNetworkFactors test ... \>\"", ",", " ", 
    RowBox[{"gradeNetworkFactors", "==", 
     RowBox[{"Get", "[", 
      RowBox[{"dataDirectory", "<>", "\"\<gradeNetworkInput.txt\>\""}], 
      "]"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"presentation", "[", 
   RowBox[{"{", 
    RowBox[{"title_", ",", "data_"}], "}"}], "]"}], ":=", 
  RowBox[{"Text", "@", 
   RowBox[{"Grid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fold", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#1", ",", 
              RowBox[{"N", "@", 
               RowBox[{"Round", "[", 
                RowBox[{
                 RowBox[{"Last", "/@", "#2"}], ",", 
                 SuperscriptBox["10", 
                  RowBox[{"-", "2"}]]}], "]"}]}]}], "}"}], ",", "1"}], "]"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<SAMIAM (Directed)\>\"", ",", 
             "\"\<Mathematica Distributions Chain-Rule (Directed)\>\"", ",", 
             "\"\<Compute Exact Marginals (Undirected)\>\"", ",", 
             "\"\<Compute Exact Marginals Message Passing (Undirected)\>\"", 
             ",", "\"\<Compute Approx Marginals Message Passing \
(Undirected)\>\""}], "}"}], ",", "\[IndentingNewLine]", "data"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\"\<Cardinality\>\"", "}"}], ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"samiam", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\"\<Node\>\"", "}"}], ",", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"First", "/@", "samiam"}], ")"}], "/.", 
              RowBox[{"Thread", "[", 
               RowBox[{
                RowBox[{"Range", "@", 
                 RowBox[{"Length", "@", "samiam"}]}], "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Difficulty\>\"", ",", "\"\<Intelligence\>\"", ",", 
                  "\"\<Grade\>\"", ",", "\"\<SAT\>\"", ",", 
                  "\"\<Letter\>\""}], "}"}]}], "]"}]}], "}"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"title", ",", "SpanFromLeft"}], "}"}]}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Background", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Lighter", "[", 
           RowBox[{"Blue", ",", ".97"}], "]"}], ",", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Yellow", ",", ".9"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"White", ",", 
            RowBox[{"Lighter", "[", 
             RowBox[{
              RowBox[{"Blend", "[", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], 
             "]"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Dividers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", 
           RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"Lighter", "[", 
            RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
          RowBox[{"Darker", "[", 
           RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", 
           RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
          RowBox[{"Darker", "[", 
           RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
          RowBox[{"Darker", "[", 
           RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
          RowBox[{"{", "False", "}"}], ",", 
          RowBox[{"Darker", "[", 
           RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Alignment", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Left", ",", 
         RowBox[{"{", "Center", "}"}]}], "}"}], "}"}]}], ",", 
     RowBox[{"ItemSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"36", ",", "8", ",", "8", ",", "11", ",", 
         RowBox[{"{", "8", "}"}]}], "}"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"Darker", "[", 
       RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
     RowBox[{"ItemStyle", "\[Rule]", "14"}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", ".8"}], "}"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"{", 
     RowBox[{"samiam", ",", "gwr", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"computeMarginal", "[", 
         RowBox[{
          RowBox[{"{", "#", "}"}], ",", "gradeNetworkFactors", ",", 
          RowBox[{"{", "}"}]}], "]"}], "&"}], "/@", 
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "gradeNetworkFactors"}]}]}], ",", 
      RowBox[{"computeExactMarginalsBP", "@", "gradeNetworkFactors"}], ",", 
      RowBox[{"computeApproxMarginalsBP", "@", "gradeNetworkFactors"}]}], 
     "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "To", " ", "submit", " ", "evidence", " ", "that", " ", "Intelligence"}], 
    " ", "=", " ", 
    RowBox[{
    "high", " ", "set", " ", "node", " ", "2", " ", "to", " ", "state", " ", 
     "2"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{"{", 
    RowBox[{"samiamIe1", ",", "gwrIe1", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"computeMarginal", "[", 
        RowBox[{
         RowBox[{"{", "#", "}"}], ",", "gradeNetworkFactors", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2"}], "}"}], "}"}]}], "]"}], "&"}], "/@", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "gradeNetworkFactors"}]}]}], ",", 
     RowBox[{"computeExactMarginalsBP", "[", 
      RowBox[{"gradeNetworkFactors", ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "}"}]}], "]"}], ",", 
     RowBox[{"computeApproxMarginalsBP", "[", 
      RowBox[{"gradeNetworkFactors", ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "}"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"presentation", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Marginals without Evidence\>\"", ",", "data"}], "}"}], ",", 
    
    RowBox[{"{", 
     RowBox[{
     "\"\<Marginals with Evidence of Intelligence = high\>\"", ",", "data1"}],
      "}"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.739825384367751*^9, 3.739825384374673*^9}, {
   3.7398254145341463`*^9, 3.739825424405411*^9}, {3.739825465837337*^9, 
   3.739825559139292*^9}, {3.7398256118551817`*^9, 3.7398256922401648`*^9}, {
   3.739825741329471*^9, 3.739825760880368*^9}, {3.739825924828109*^9, 
   3.739825934320303*^9}, {3.7398259666243067`*^9, 3.739826020245174*^9}, {
   3.739826187648551*^9, 3.739826216531418*^9}, {3.739826825488327*^9, 
   3.739826871936975*^9}, {3.7398380430451736`*^9, 3.739838061443103*^9}, {
   3.80120913065298*^9, 3.801209193855136*^9}, {3.801209228067114*^9, 
   3.801209240928162*^9}, {3.801209281324597*^9, 3.801209350357085*^9}, {
   3.801209383359417*^9, 3.8012094191837482`*^9}, {3.801209545677033*^9, 
   3.801209548579097*^9}, {3.801209656559547*^9, 3.801209675184885*^9}, {
   3.801209723666337*^9, 3.801209952765794*^9}, {3.801210208616662*^9, 
   3.8012102157902117`*^9}, {3.8012103835776463`*^9, 
   3.8012104527131443`*^9}, {3.80121051779812*^9, 3.801210537352581*^9}, {
   3.801210616080811*^9, 3.801210625642638*^9}, {3.8012106567125177`*^9, 
   3.8012106621180058`*^9}, {3.801210720027289*^9, 3.801210733001917*^9}, {
   3.801211036592647*^9, 3.801211103415803*^9}, {3.801211761485097*^9, 
   3.801211820068336*^9}, {3.801446897974372*^9, 3.8014469054522963`*^9}, {
   3.8016464175243998`*^9, 3.8016464348143473`*^9}, {3.804888506529513*^9, 
   3.804888968934005*^9}, {3.804889003304558*^9, 3.80488901645229*^9}, {
   3.804889054236298*^9, 3.804889075808457*^9}, {3.804889134869069*^9, 
   3.804889266183741*^9}, {3.804889378063986*^9, 3.8048894182656717`*^9}, {
   3.804889497422101*^9, 3.804889498333799*^9}, {3.804889537577592*^9, 
   3.804889628146913*^9}, {3.804889862617834*^9, 3.804889863406829*^9}, {
   3.804890242224698*^9, 3.804890340968933*^9}, {3.804891599826652*^9, 
   3.8048918984228897`*^9}, {3.8048919444628963`*^9, 3.804891966544359*^9}, {
   3.8048919965989027`*^9, 3.804891997287272*^9}, {3.8048923270310793`*^9, 
   3.804892421257756*^9}, {3.804892481119343*^9, 3.804892483531164*^9}, {
   3.804892580517778*^9, 3.804892585808526*^9}, {3.80489281177752*^9, 
   3.804892819360786*^9}, {3.804893028491269*^9, 3.804893054113523*^9}, {
   3.80489341055518*^9, 3.804893426573099*^9}, {3.804893500208191*^9, 
   3.804893501520199*^9}, {3.804893556228878*^9, 3.8048935681505623`*^9}, {
   3.804893685416683*^9, 3.804893685884926*^9}, 3.804896303631568*^9, {
   3.8048966588907757`*^9, 3.804896691412586*^9}, {3.8048968084037123`*^9, 
   3.804896876469081*^9}, {3.8048969123676147`*^9, 3.8048969307398863`*^9}, {
   3.804896967747023*^9, 3.8048970257733307`*^9}, {3.8048970625004673`*^9, 
   3.80489720621587*^9}, {3.804897237389944*^9, 3.804897317524136*^9}, {
   3.804898027190048*^9, 3.80489805205057*^9}, {3.804898099000227*^9, 
   3.804898115453774*^9}, {3.8048981507217627`*^9, 3.8048982058162193`*^9}, {
   3.804898242618964*^9, 3.8048984333364153`*^9}, {3.8048984758922358`*^9, 
   3.80489855721414*^9}, {3.804898623999888*^9, 3.8048987024298267`*^9}, {
   3.804898734605851*^9, 3.804898784033476*^9}, {3.804898835614709*^9, 
   3.8048988523855143`*^9}, {3.804898884595306*^9, 3.804898903857832*^9}, {
   3.804898942016436*^9, 3.804898970301264*^9}, 3.8048990030935907`*^9, {
   3.8048990495300426`*^9, 3.804899077624442*^9}, {3.804899246386567*^9, 
   3.804899255536153*^9}, {3.804899606662025*^9, 3.804899687518754*^9}, {
   3.804899727449959*^9, 3.804899821654624*^9}, {3.804899878614937*^9, 
   3.804899899409759*^9}, {3.80490071030937*^9, 3.804900712453945*^9}, {
   3.804900764650448*^9, 3.804900766861825*^9}, {3.804906271887236*^9, 
   3.804906298694747*^9}, {3.804906377632227*^9, 3.804906387946177*^9}, {
   3.804908079345544*^9, 3.804908085297933*^9}, {3.804908155239045*^9, 
   3.804908225170965*^9}, {3.804908390566423*^9, 3.8049084910508213`*^9}, {
   3.8050456393475113`*^9, 3.805045744646256*^9}, {3.805060554847036*^9, 
   3.8050608558909903`*^9}, {3.8050624084154167`*^9, 3.805062572724311*^9}, 
   3.80506261646247*^9, 3.805062824370199*^9, {3.805062993503065*^9, 
   3.80506299425032*^9}, {3.8050636041330767`*^9, 3.8050636048649406`*^9}, {
   3.805063637196519*^9, 3.805063809936976*^9}, {3.805063918755712*^9, 
   3.805063933073732*^9}, {3.805063985339616*^9, 3.8050640204249783`*^9}, {
   3.805066852216983*^9, 3.80506689175248*^9}, {3.80506722909663*^9, 
   3.805067239085903*^9}, {3.805365873786474*^9, 3.805366047677793*^9}, {
   3.805366270982997*^9, 3.8053662720146646`*^9}, {3.805366311636129*^9, 
   3.805366315013029*^9}, {3.805366360936599*^9, 3.8053663852113*^9}, {
   3.805366482821666*^9, 3.80536649323619*^9}, {3.8053667709505167`*^9, 
   3.805366775410136*^9}, {3.8053668138374157`*^9, 3.805366829329343*^9}, {
   3.805366860900774*^9, 3.805366863622075*^9}, 3.8054187218491287`*^9, 
   3.8054222181133432`*^9, 3.805422251493005*^9, {3.805424299986196*^9, 
   3.805424362695557*^9}},ExpressionUUID->"2f6fdc73-ed79-4c5b-910f-\
8dc67c0f37d3"],

Cell[BoxData[
 StyleBox["\<\"Comparison of Bayesnets (samiam & Mathematica Distributions \
Chain-Rule) with Exact Computation & Belief Propagation in Markov Undirected \
Graphs\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->Larger,
  FontWeight->Bold,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{
  3.805062576400743*^9, 3.805062761959055*^9, 3.8050628022912083`*^9, 
   3.8050628783389997`*^9, 3.8050629624683647`*^9, 3.805063011996664*^9, 
   3.805063200015177*^9, 3.805063243082924*^9, 3.805063330794203*^9, 
   3.8050634152553864`*^9, 3.805063457255969*^9, 3.805063519051536*^9, 
   3.805063938957982*^9, 3.805064022134366*^9, 3.805064482803495*^9, 
   3.805064718051064*^9, 3.805066558663598*^9, 3.805066907502839*^9, 
   3.8050672406427937`*^9, 3.805366867783087*^9, 3.805366938624012*^9, {
   3.805418722381371*^9, 3.805418736796946*^9}, 3.80542221931028*^9, 
   3.805422252196823*^9, 3.805424038942547*^9},
 CellLabel->
  "During evaluation of \
In[483]:=",ExpressionUUID->"fcc5b001-1268-45c0-adb6-525f241c8f58"],

Cell[BoxData[
 TemplateBox[{
  "Attributes", "locked", 
   "\"Symbol \\!\\(\\*RowBox[{\\\"beliefPropagation\\\"}]\\) is locked.\"", 2,
    486, 54, 22942029730301975282, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.805066907523203*^9, 3.80506724064533*^9, 3.8053668677852173`*^9, 
   3.8053669386279097`*^9, {3.805418724709086*^9, 3.805418736798938*^9}, 
   3.805422219327409*^9, 3.805422252214973*^9, 3.805424038945368*^9},
 CellLabel->
  "During evaluation of \
In[483]:=",ExpressionUUID->"39c1bf89-f17b-4139-940f-17fc536dde38"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"gradeNetworkFactors test ... \"\>", "\[InvisibleSpace]", 
   "True"}],
  SequenceForm["gradeNetworkFactors test ... ", True],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.805062576400743*^9, 3.805062761959055*^9, 3.8050628022912083`*^9, 
   3.8050628783389997`*^9, 3.8050629624683647`*^9, 3.805063011996664*^9, 
   3.805063200015177*^9, 3.805063243082924*^9, 3.805063330794203*^9, 
   3.8050634152553864`*^9, 3.805063457255969*^9, 3.805063519051536*^9, 
   3.805063938957982*^9, 3.805064022134366*^9, 3.805064482803495*^9, 
   3.805064718051064*^9, 3.805066558663598*^9, 3.805066907502839*^9, 
   3.8050672406427937`*^9, 3.805366867783087*^9, 3.805366938624012*^9, {
   3.805418722381371*^9, 3.805418736796946*^9}, 3.80542221931028*^9, 
   3.805422252196823*^9, 3.80542403895105*^9},
 CellLabel->
  "During evaluation of \
In[483]:=",ExpressionUUID->"74b6b9f0-c9de-411b-90bd-638acaaee157"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"LBP Messages Passed: \"\>", "\[InvisibleSpace]", "11"}],
  SequenceForm["LBP Messages Passed: ", 11],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.805062576400743*^9, 3.805062761959055*^9, 3.8050628022912083`*^9, 
   3.8050628783389997`*^9, 3.8050629624683647`*^9, 3.805063011996664*^9, 
   3.805063200015177*^9, 3.805063243082924*^9, 3.805063330794203*^9, 
   3.8050634152553864`*^9, 3.805063457255969*^9, 3.805063519051536*^9, 
   3.805063938957982*^9, 3.805064022134366*^9, 3.805064482803495*^9, 
   3.805064718051064*^9, 3.805066558663598*^9, 3.805066907502839*^9, 
   3.8050672406427937`*^9, 3.805366867783087*^9, 3.805366938624012*^9, {
   3.805418722381371*^9, 3.805418736796946*^9}, 3.80542221931028*^9, 
   3.805422252196823*^9, 3.805424038970531*^9},
 CellLabel->
  "During evaluation of \
In[483]:=",ExpressionUUID->"e11481c6-8b89-43ab-aa96-3d52a0d0d8ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total number of messages passed: \"\>", "\[InvisibleSpace]", 
   "11", "\[InvisibleSpace]", "\<\" in \"\>", "\[InvisibleSpace]", 
   "0.005752`4.2113638708708", "\[InvisibleSpace]", "\<\" seconds\"\>"}],
  SequenceForm[
  "Total number of messages passed: ", 11, " in ", 0.005752`4.2113638708708, 
   " seconds"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.805062576400743*^9, 3.805062761959055*^9, 3.8050628022912083`*^9, 
   3.8050628783389997`*^9, 3.8050629624683647`*^9, 3.805063011996664*^9, 
   3.805063200015177*^9, 3.805063243082924*^9, 3.805063330794203*^9, 
   3.8050634152553864`*^9, 3.805063457255969*^9, 3.805063519051536*^9, 
   3.805063938957982*^9, 3.805064022134366*^9, 3.805064482803495*^9, 
   3.805064718051064*^9, 3.805066558663598*^9, 3.805066907502839*^9, 
   3.8050672406427937`*^9, 3.805366867783087*^9, 3.805366938624012*^9, {
   3.805418722381371*^9, 3.805418736796946*^9}, 3.80542221931028*^9, 
   3.805422252196823*^9, 3.805424038974279*^9},
 CellLabel->
  "During evaluation of \
In[483]:=",ExpressionUUID->"f5f88942-62d0-4cd6-a15b-06e3851de4b4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"LBP Messages Passed: \"\>", "\[InvisibleSpace]", "11"}],
  SequenceForm["LBP Messages Passed: ", 11],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.805062576400743*^9, 3.805062761959055*^9, 3.8050628022912083`*^9, 
   3.8050628783389997`*^9, 3.8050629624683647`*^9, 3.805063011996664*^9, 
   3.805063200015177*^9, 3.805063243082924*^9, 3.805063330794203*^9, 
   3.8050634152553864`*^9, 3.805063457255969*^9, 3.805063519051536*^9, 
   3.805063938957982*^9, 3.805064022134366*^9, 3.805064482803495*^9, 
   3.805064718051064*^9, 3.805066558663598*^9, 3.805066907502839*^9, 
   3.8050672406427937`*^9, 3.805366867783087*^9, 3.805366938624012*^9, {
   3.805418722381371*^9, 3.805418736796946*^9}, 3.80542221931028*^9, 
   3.805422252196823*^9, 3.805424038996632*^9},
 CellLabel->
  "During evaluation of \
In[483]:=",ExpressionUUID->"bbe9909b-1489-49fa-8b6f-d556661e506a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total number of messages passed: \"\>", "\[InvisibleSpace]", 
   "11", "\[InvisibleSpace]", "\<\" in \"\>", "\[InvisibleSpace]", 
   "0.005607`4.2002755495944655", "\[InvisibleSpace]", "\<\" seconds\"\>"}],
  SequenceForm[
  "Total number of messages passed: ", 11, " in ", 
   0.005607`4.2002755495944655, " seconds"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.805062576400743*^9, 3.805062761959055*^9, 3.8050628022912083`*^9, 
   3.8050628783389997`*^9, 3.8050629624683647`*^9, 3.805063011996664*^9, 
   3.805063200015177*^9, 3.805063243082924*^9, 3.805063330794203*^9, 
   3.8050634152553864`*^9, 3.805063457255969*^9, 3.805063519051536*^9, 
   3.805063938957982*^9, 3.805064022134366*^9, 3.805064482803495*^9, 
   3.805064718051064*^9, 3.805066558663598*^9, 3.805066907502839*^9, 
   3.8050672406427937`*^9, 3.805366867783087*^9, 3.805366938624012*^9, {
   3.805418722381371*^9, 3.805418736796946*^9}, 3.80542221931028*^9, 
   3.805422252196823*^9, 3.805424039000025*^9},
 CellLabel->
  "During evaluation of \
In[483]:=",ExpressionUUID->"14ac1561-627c-4c8a-b487-a2c22969ab73"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[Cell[BoxData[
     FormBox[
      TagBox[GridBox[{
         {"\<\"Marginals without Evidence\"\>", "\[SpanFromLeft]", 
          "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
          "\[SpanFromLeft]"},
         {"\<\"Node\"\>", "\<\"Difficulty\"\>", "\<\"Intelligence\"\>", \
"\<\"Grade\"\>", "\<\"SAT\"\>", "\<\"Letter\"\>"},
         {"\<\"Cardinality\"\>", "2", "2", "3", "2", "2"},
         {"\<\"SAMIAM (Directed)\"\>", 
          RowBox[{"{", 
           RowBox[{"0.6`", ",", "0.4`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.7`", ",", "0.3`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.36`", ",", "0.29`", ",", "0.35`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.72`", ",", "0.28`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.5`", ",", "0.5`"}], "}"}]},
         {"\<\"Mathematica Distributions Chain-Rule (Directed)\"\>", 
          RowBox[{"{", 
           RowBox[{"0.6`", ",", "0.4`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.7`", ",", "0.3`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.36`", ",", "0.29`", ",", "0.35`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.72`", ",", "0.28`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.5`", ",", "0.5`"}], "}"}]},
         {"\<\"Compute Exact Marginals (Undirected)\"\>", 
          RowBox[{"{", 
           RowBox[{"0.6`", ",", "0.4`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.7`", ",", "0.3`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.36`", ",", "0.29`", ",", "0.35`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.72`", ",", "0.28`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.5`", ",", "0.5`"}], "}"}]},
         {"\<\"Compute Exact Marginals Message Passing (Undirected)\"\>", 
          RowBox[{"{", 
           RowBox[{"0.6`", ",", "0.4`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.7`", ",", "0.3`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.36`", ",", "0.29`", ",", "0.35`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.72`", ",", "0.28`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.5`", ",", "0.5`"}], "}"}]},
         {"\<\"Compute Approx Marginals Message Passing (Undirected)\"\>", 
          RowBox[{"{", 
           RowBox[{"0.64`", ",", "0.36`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.7`", ",", "0.3`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.34`", ",", "0.26`", ",", "0.41`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.88`", ",", "0.12`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.6`", ",", "0.4`"}], "}"}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {Left, {Center}}},
        GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
            RGBColor[0.97, 0.97, 1.], 
            RGBColor[1., 1., 0.9], {
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}},
        GridBoxDividers->{"Columns" -> {
            RGBColor[0.2, 0.2, 0.2], {
             RGBColor[0.75, 0.75, 0.75]}, 
            RGBColor[0.2, 0.2, 0.2]}, "Rows" -> {
            RGBColor[0.2, 0.2, 0.2], 
            RGBColor[0.2, 0.2, 0.2], 
            RGBColor[0.2, 0.2, 0.2], {False}, 
            RGBColor[0.2, 0.2, 0.2]}},
        GridBoxFrame->{
         "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> RGBColor[0.2, 0.2, 0.2]}},
        
        GridBoxItemSize->{"Columns" -> {36, 8, 8, 11, {8}}},
        GridBoxItemStyle->{"Columns" -> {{14}}, "Rows" -> {{14}}},
        GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
       "Grid"], TextForm]], "InlineText",ExpressionUUID->
     "d0f68e79-9bf1-4dc7-8caf-cf7fb35881e8"],
    Text[
     Grid[{{"Marginals without Evidence", SpanFromLeft}, {
       "Node", "Difficulty", "Intelligence", "Grade", "SAT", "Letter"}, {
       "Cardinality", 2, 2, 3, 2, 2}, {
       "SAMIAM (Directed)", {0.6, 0.4}, {0.7, 0.3}, {0.36, 0.29, 0.35}, {0.72,
         0.28}, {0.5, 0.5}}, {
       "Mathematica Distributions Chain-Rule (Directed)", {0.6, 0.4}, {0.7, 
        0.3}, {0.36, 0.29, 0.35}, {0.72, 0.28}, {0.5, 0.5}}, {
       "Compute Exact Marginals (Undirected)", {0.6, 0.4}, {0.7, 0.3}, {0.36, 
        0.29, 0.35}, {0.72, 0.28}, {0.5, 0.5}}, {
       "Compute Exact Marginals Message Passing (Undirected)", {0.6, 0.4}, {
        0.7, 0.3}, {0.36, 0.29, 0.35}, {0.72, 0.28}, {0.5, 0.5}}, {
       "Compute Approx Marginals Message Passing (Undirected)", {0.64, 
        0.36}, {0.7, 0.3}, {0.34, 0.26, 0.41}, {0.88, 0.12}, {0.6, 0.4}}}, 
      Background -> {None, {
         RGBColor[0.97, 0.97, 1.], 
         RGBColor[1., 1., 0.9], {
          GrayLevel[1], 
          RGBColor[0.8, 0.9, 0.9]}}}, Dividers -> {{
         RGBColor[0.2, 0.2, 0.2], {
          RGBColor[0.75, 0.75, 0.75]}, 
         RGBColor[0.2, 0.2, 0.2]}, {
         RGBColor[0.2, 0.2, 0.2], 
         RGBColor[0.2, 0.2, 0.2], 
         RGBColor[0.2, 0.2, 0.2], {False}, 
         RGBColor[0.2, 0.2, 0.2]}}, Alignment -> {{Left, {Center}}}, 
      ItemSize -> {{36, 8, 8, 11, {8}}}, Frame -> RGBColor[0.2, 0.2, 0.2], 
      ItemStyle -> 14, Spacings -> {Automatic, 0.8}]]], ",", 
   InterpretationBox[Cell[BoxData[
     FormBox[
      TagBox[GridBox[{
         {"\<\"Marginals with Evidence of Intelligence = high\"\>", 
          "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
          "\[SpanFromLeft]", "\[SpanFromLeft]"},
         {"\<\"Node\"\>", "\<\"Difficulty\"\>", "\<\"Intelligence\"\>", \
"\<\"Grade\"\>", "\<\"SAT\"\>", "\<\"Letter\"\>"},
         {"\<\"Cardinality\"\>", "2", "2", "3", "2", "2"},
         {"\<\"SAMIAM (Directed)\"\>", 
          RowBox[{"{", 
           RowBox[{"0.6`", ",", "0.4`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.`", ",", "1.`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.74`", ",", "0.17`", ",", "0.09`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.2`", ",", "0.8`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.23`", ",", "0.77`"}], "}"}]},
         {"\<\"Mathematica Distributions Chain-Rule (Directed)\"\>", 
          RowBox[{"{", 
           RowBox[{"0.6`", ",", "0.4`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.`", ",", "1.`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.74`", ",", "0.17`", ",", "0.09`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.2`", ",", "0.8`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.23`", ",", "0.77`"}], "}"}]},
         {"\<\"Compute Exact Marginals (Undirected)\"\>", 
          RowBox[{"{", 
           RowBox[{"0.6`", ",", "0.4`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.`", ",", "1.`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.74`", ",", "0.17`", ",", "0.09`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.2`", ",", "0.8`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.23`", ",", "0.77`"}], "}"}]},
         {"\<\"Compute Exact Marginals Message Passing (Undirected)\"\>", 
          RowBox[{"{", 
           RowBox[{"0.6`", ",", "0.4`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.`", ",", "1.`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.74`", ",", "0.17`", ",", "0.09`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.2`", ",", "0.8`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.23`", ",", "0.77`"}], "}"}]},
         {"\<\"Compute Approx Marginals Message Passing (Undirected)\"\>", 
          RowBox[{"{", 
           RowBox[{"0.83`", ",", "0.17`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.`", ",", "1.`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.93`", ",", "0.05`", ",", "0.02`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.06`", ",", "0.94`"}], "}"}], 
          RowBox[{"{", 
           RowBox[{"0.01`", ",", "0.99`"}], "}"}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {Left, {Center}}},
        GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
            RGBColor[0.97, 0.97, 1.], 
            RGBColor[1., 1., 0.9], {
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}},
        GridBoxDividers->{"Columns" -> {
            RGBColor[0.2, 0.2, 0.2], {
             RGBColor[0.75, 0.75, 0.75]}, 
            RGBColor[0.2, 0.2, 0.2]}, "Rows" -> {
            RGBColor[0.2, 0.2, 0.2], 
            RGBColor[0.2, 0.2, 0.2], 
            RGBColor[0.2, 0.2, 0.2], {False}, 
            RGBColor[0.2, 0.2, 0.2]}},
        GridBoxFrame->{
         "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> RGBColor[0.2, 0.2, 0.2]}},
        
        GridBoxItemSize->{"Columns" -> {36, 8, 8, 11, {8}}},
        GridBoxItemStyle->{"Columns" -> {{14}}, "Rows" -> {{14}}},
        GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
       "Grid"], TextForm]], "InlineText",ExpressionUUID->
     "d43797bb-eeb3-4256-992e-a0952ec4a2ed"],
    Text[
     Grid[{{"Marginals with Evidence of Intelligence = high", SpanFromLeft}, {
       "Node", "Difficulty", "Intelligence", "Grade", "SAT", "Letter"}, {
       "Cardinality", 2, 2, 3, 2, 2}, {
       "SAMIAM (Directed)", {0.6, 0.4}, {0., 1.}, {0.74, 0.17, 0.09}, {0.2, 
        0.8}, {0.23, 0.77}}, {
       "Mathematica Distributions Chain-Rule (Directed)", {0.6, 0.4}, {0., 
        1.}, {0.74, 0.17, 0.09}, {0.2, 0.8}, {0.23, 0.77}}, {
       "Compute Exact Marginals (Undirected)", {0.6, 0.4}, {0., 1.}, {0.74, 
        0.17, 0.09}, {0.2, 0.8}, {0.23, 0.77}}, {
       "Compute Exact Marginals Message Passing (Undirected)", {0.6, 0.4}, {
        0., 1.}, {0.74, 0.17, 0.09}, {0.2, 0.8}, {0.23, 0.77}}, {
       "Compute Approx Marginals Message Passing (Undirected)", {0.83, 
        0.17}, {0., 1.}, {0.93, 0.05, 0.02}, {0.06, 0.94}, {0.01, 0.99}}}, 
      Background -> {None, {
         RGBColor[0.97, 0.97, 1.], 
         RGBColor[1., 1., 0.9], {
          GrayLevel[1], 
          RGBColor[0.8, 0.9, 0.9]}}}, Dividers -> {{
         RGBColor[0.2, 0.2, 0.2], {
          RGBColor[0.75, 0.75, 0.75]}, 
         RGBColor[0.2, 0.2, 0.2]}, {
         RGBColor[0.2, 0.2, 0.2], 
         RGBColor[0.2, 0.2, 0.2], 
         RGBColor[0.2, 0.2, 0.2], {False}, 
         RGBColor[0.2, 0.2, 0.2]}}, Alignment -> {{Left, {Center}}}, 
      ItemSize -> {{36, 8, 8, 11, {8}}}, Frame -> RGBColor[0.2, 0.2, 0.2], 
      ItemStyle -> 14, Spacings -> {Automatic, 0.8}]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8050629624748783`*^9, 3.8050630121176*^9, 3.805063200068987*^9, 
   3.8050632431448*^9, 3.805063330851359*^9, 3.805063415263397*^9, 
   3.805063457293878*^9, 3.805063519112442*^9, 3.8050639390448847`*^9, 
   3.805064022218938*^9, 3.805064482903358*^9, 3.805064718120962*^9, 
   3.8050665587401237`*^9, 3.805066907577907*^9, 3.8050672407300673`*^9, 
   3.805366867792323*^9, 3.805366938633355*^9, {3.8054187247369013`*^9, 
   3.805418736830716*^9}, 3.805422219335431*^9, 3.805422252290475*^9, 
   3.8054240390027323`*^9},
 CellLabel->
  "Out[493]=",ExpressionUUID->"36a49482-3622-47ab-8ef8-f9a1355904ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                "Manual", " ", "creation", " ", "of", " ", "factors", " ", 
                 "for", " ", "gradeNetwork", " ", "by", " ", "inspecting", 
                 " ", "conditional", " ", "probabilities"}], " ", "..."}], 
               " ", "firstly", " ", "inspect", " ", "the", " ", "vertices"}], 
              " ", "&"}], " ", "edges", " ", "to", " ", "specify", " ", "the",
              " ", "variables", " ", "in", " ", "each", " ", "factor"}], " ", 
            "..."}], " ", "with", " ", "the", " ", "resultant", " ", 
           "variable", " ", "being", " ", "first", " ", "in", " ", "the", " ",
            "variable", " ", "sequence"}], " ", "..."}], " ", "arrange", " ", 
         "the", " ", "factors", " ", "in", " ", "canonical", " ", "order", 
         " ", "using", " ", "the", " ", "first", " ", "variable", " ", "in", 
         " ", "each", " ", "factor", " ", "as", " ", "the", " ", "index"}], 
        " ", "..."}], " ", "establish", " ", "the", " ", "sequence", " ", 
       "of", " ", "values", " ", "from", " ", "variable", " ", "states", " ", 
       "using", " ", "the", " ", "function", " ", 
       RowBox[{"indexToAssignment", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Times", "@@", "cardinalities"}], "]"}], ",", 
         "cardinalities"}], "]"}]}], " ", "..."}], " ", "this", " ", 
     "process", " ", "is", " ", "demonstrated", " ", "here"}], " ", "..."}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Step", " ", "1"}], ":", " ", 
     RowBox[{
     "inspect", " ", "the", " ", "graph", " ", "to", " ", "establish", " ", 
      "the", " ", "factor"}]}], ",", " ", 
    RowBox[{"variables", " ", "in", " ", "the", " ", "factors"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"cardinalities", " ", "&"}], " ", "readily", " ", "available", 
       " ", 
       RowBox[{"probabilities", ":", "\[IndentingNewLine]", "factors"}]}], 
      "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"{", "2", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.4"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "2", "}"}], ",", 
          RowBox[{"{", "2", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.7", ",", "0.3"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"3", ",", "2", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "2", ",", "2"}], "}"}], ",", "cpdFactor3"}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"4", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2"}], "}"}], ",", "cpdFactor4"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"5", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2"}], "}"}], ",", "cpdFactor5"}], "}"}]}], 
       "}"}]}], ";"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Step", " ", "2"}], ":", " ", 
    RowBox[{
    "use", " ", "indexToAssignment", " ", "to", " ", "specify", " ", "the", 
     " ", "sequence", " ", "of", " ", "state", " ", "combinations", " ", 
     "and", " ", "observe", " ", "the", " ", "probability", " ", "from", " ", 
     "the", " ", "conditional", " ", "probability", " ", "distribution"}], 
    ":"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"cpdFactor3", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.3", ",", "0.4", ",", "0.3", ",", "0.9", ",", "0.08", ",", "0.02", 
       ",", "0.05", ",", "0.25", ",", "0.7", ",", "0.5", ",", "0.3", ",", 
       "0.2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"TableForm", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"indexToAssignment", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Times", "@@", 
           RowBox[{"{", 
            RowBox[{"3", ",", "2", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2", ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", "cpdFactor3", "}"}], "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{"TableHeadings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<g(3)\>\"", ",", "\"\<i(2)\>\"", ",", "\"\<d(1)\>\"", ",", 
          "\"\<cpdFactor3\>\""}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cpdFactor4", "=", 
     RowBox[{"{", 
      RowBox[{"0.95", ",", "0.05", ",", "0.2", ",", "0.8"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"TableForm", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"indexToAssignment", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Times", "@@", 
           RowBox[{"{", 
            RowBox[{"2", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", "cpdFactor4", "}"}], "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{"TableHeadings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<s(4)\>\"", ",", "\"\<i(2)\>\"", ",", "\"\<cpdFactor4\>\""}], 
         "}"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cpdFactor5", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.1", ",", "0.9", ",", "0.4", ",", "0.6", ",", "0.99", ",", "0.01"}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"TableForm", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"indexToAssignment", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Times", "@@", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", "cpdFactor5", "}"}], "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{"TableHeadings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<l(5)\>\"", ",", "\"\<g(3)\>\"", ",", "\"\<cpdFactor5\>\""}], 
         "}"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Step", " ", "3"}], ":", " ", 
     RowBox[{"Complete", " ", "the", " ", "factors"}], ":"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"factors", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.6", ",", "0.4"}], "}"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.7", ",", "0.3"}], "}"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2", ",", "2"}], "}"}], ",", "cpdFactor3"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], ",", "cpdFactor4"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}], ",", "cpdFactor5"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Factor creation test ... \>\"", ",", 
     RowBox[{"gradeNetworkFactors", "\[Equal]", "factors"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8054194109668694`*^9, 3.8054195064341307`*^9}, {
   3.805419540220068*^9, 3.805419611303714*^9}, {3.805419967354253*^9, 
   3.8054200228948593`*^9}, {3.805420141173499*^9, 3.805420149795837*^9}, {
   3.805420220825345*^9, 3.80542026364779*^9}, {3.8054203091474867`*^9, 
   3.805420322158181*^9}, {3.805420357372859*^9, 3.805420368043109*^9}, {
   3.805420525411386*^9, 3.805420534277372*^9}, {3.8054205658274193`*^9, 
   3.8054205852972717`*^9}, {3.8054206496399717`*^9, 3.805420651064242*^9}, {
   3.80542072997045*^9, 3.805420784396673*^9}, {3.805421219277614*^9, 
   3.805421365783382*^9}, {3.8054214823532143`*^9, 3.805421486905051*^9}, {
   3.8054215876381598`*^9, 3.8054217820353518`*^9}, 3.80542193677009*^9, {
   3.8054222345136633`*^9, 3.805422236093464*^9}, {3.805422645485241*^9, 
   3.805422679795864*^9}, 3.805422764972086*^9, {3.80542288435891*^9, 
   3.805422885154593*^9}, {3.805423029026309*^9, 3.805423074141563*^9}, {
   3.805423110553212*^9, 3.805423273865794*^9}, {3.8054233046562023`*^9, 
   3.805423718623136*^9}, {3.805423759985135*^9, 3.80542399858644*^9}, {
   3.805424058569106*^9, 3.805424060645014*^9}, {3.805424153957035*^9, 
   3.805424167762116*^9}, {3.805424218936714*^9, 3.805424249571868*^9}},
 CellLabel->
  "In[520]:=",ExpressionUUID->"982bbe5c-e2db-4e07-91e0-30d86083a04b"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"g(3)\"\>",
       HoldForm], 
      TagBox["\<\"i(2)\"\>",
       HoldForm], 
      TagBox["\<\"d(1)\"\>",
       HoldForm], 
      TagBox["\<\"cpdFactor3\"\>",
       HoldForm]},
     {"1", "1", "1", "0.3`"},
     {"2", "1", "1", "0.4`"},
     {"3", "1", "1", "0.3`"},
     {"1", "2", "1", "0.9`"},
     {"2", "2", "1", "0.08`"},
     {"3", "2", "1", "0.02`"},
     {"1", "1", "2", "0.05`"},
     {"2", "1", "2", "0.25`"},
     {"3", "1", "2", "0.7`"},
     {"1", "2", "2", "0.5`"},
     {"2", "2", "2", "0.3`"},
     {"3", "2", "2", "0.2`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"g(3)", "i(2)", "d(1)", "cpdFactor3"}}]]]], "Output",
 CellChangeTimes->{
  3.8054226815518713`*^9, 3.805422766263093*^9, 3.80542307873158*^9, 
   3.805424003470059*^9, 3.8054240631237373`*^9, {3.805424156188498*^9, 
   3.805424169031584*^9}, 3.8054242529897738`*^9},
 CellLabel->
  "Out[521]//TableForm=",ExpressionUUID->"63788f1d-c6b2-4933-a997-\
96a3567f81a9"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"s(4)\"\>",
       HoldForm], 
      TagBox["\<\"i(2)\"\>",
       HoldForm], 
      TagBox["\<\"cpdFactor4\"\>",
       HoldForm]},
     {"1", "1", "0.95`"},
     {"2", "1", "0.05`"},
     {"1", "2", "0.2`"},
     {"2", "2", "0.8`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {None, {"s(4)", "i(2)", "cpdFactor4"}}]]]], "Output",
 CellChangeTimes->{
  3.8054226815518713`*^9, 3.805422766263093*^9, 3.80542307873158*^9, 
   3.805424003470059*^9, 3.8054240631237373`*^9, {3.805424156188498*^9, 
   3.805424169031584*^9}, 3.805424252992916*^9},
 CellLabel->
  "Out[523]//TableForm=",ExpressionUUID->"e84da886-d900-40bb-9b2b-\
10a443f7f075"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"l(5)\"\>",
       HoldForm], 
      TagBox["\<\"g(3)\"\>",
       HoldForm], 
      TagBox["\<\"cpdFactor5\"\>",
       HoldForm]},
     {"1", "1", "0.1`"},
     {"2", "1", "0.9`"},
     {"1", "2", "0.4`"},
     {"2", "2", "0.6`"},
     {"1", "3", "0.99`"},
     {"2", "3", "0.01`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {None, {"l(5)", "g(3)", "cpdFactor5"}}]]]], "Output",
 CellChangeTimes->{
  3.8054226815518713`*^9, 3.805422766263093*^9, 3.80542307873158*^9, 
   3.805424003470059*^9, 3.8054240631237373`*^9, {3.805424156188498*^9, 
   3.805424169031584*^9}, 3.805424252995101*^9},
 CellLabel->
  "Out[525]//TableForm=",ExpressionUUID->"37091199-1cdd-4694-8426-\
f1a9f7c2f2f5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Factor creation test ... \"\>", "\[InvisibleSpace]", "True"}],
  SequenceForm["Factor creation test ... ", True],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8054240034758253`*^9, 3.805424063132235*^9, {3.8054241561963882`*^9, 
   3.805424169042254*^9}, 3.805424252996463*^9},
 CellLabel->
  "During evaluation of \
In[520]:=",ExpressionUUID->"41052433-46a8-441d-bb9a-9faa44648129"]
}, Open  ]]
},
WindowSize->{1440., 761.25},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.1 for Linux x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2bd79aa6-ba45-487b-a23b-d9cf6cbeee85"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1918, 38, 108, "Text",ExpressionUUID->"cb0a4d9e-0db6-4381-8904-f4acd1eb13e5"],
Cell[2479, 60, 140820, 2312, 392, "Text",ExpressionUUID->"e5eeb54d-ab68-4347-b6cf-80c96bebe8ed"],
Cell[143302, 2374, 2230, 46, 157, "Text",ExpressionUUID->"5a85e222-3bcb-449f-b457-c28eb57b3431"],
Cell[145535, 2422, 16751, 428, 734, "Input",ExpressionUUID->"af515ff7-c124-4d23-8d97-4d2ac6504343"],
Cell[CellGroupData[{
Cell[162311, 2854, 13673, 304, 537, "Input",ExpressionUUID->"2f6fdc73-ed79-4c5b-910f-8dc67c0f37d3"],
Cell[175987, 3160, 1173, 24, 25, "Print",ExpressionUUID->"fcc5b001-1268-45c0-adb6-525f241c8f58"],
Cell[177163, 3186, 560, 12, 22, "Message",ExpressionUUID->"39c1bf89-f17b-4139-940f-17fc536dde38"],
Cell[CellGroupData[{
Cell[177748, 3202, 947, 18, 23, "Print",ExpressionUUID->"74b6b9f0-c9de-411b-90bd-638acaaee157"],
Cell[178698, 3222, 924, 17, 23, "Print",ExpressionUUID->"e11481c6-8b89-43ab-aa96-3d52a0d0d8ff"],
Cell[179625, 3241, 1136, 21, 23, "Print",ExpressionUUID->"f5f88942-62d0-4cd6-a15b-06e3851de4b4"],
Cell[180764, 3264, 924, 17, 23, "Print",ExpressionUUID->"bbe9909b-1489-49fa-8b6f-d556661e506a"],
Cell[181691, 3283, 1142, 21, 23, "Print",ExpressionUUID->"14ac1561-627c-4c8a-b487-a2c22969ab73"]
}, Open  ]],
Cell[182848, 3307, 11123, 245, 448, "Output",ExpressionUUID->"36a49482-3622-47ab-8ef8-f9a1355904ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194008, 3557, 9986, 249, 546, "Input",ExpressionUUID->"982bbe5c-e2db-4e07-91e0-30d86083a04b"],
Cell[203997, 3808, 1516, 47, 252, "Output",ExpressionUUID->"63788f1d-c6b2-4933-a997-96a3567f81a9"],
Cell[205516, 3857, 1190, 36, 115, "Output",ExpressionUUID->"e84da886-d900-40bb-9b2b-10a443f7f075"],
Cell[206709, 3895, 1240, 38, 149, "Output",ExpressionUUID->"37091199-1cdd-4694-8426-f1a9f7c2f2f5"],
Cell[207952, 3935, 441, 10, 23, "Print",ExpressionUUID->"41052433-46a8-441d-bb9a-9faa44648129"]
}, Open  ]]
}
]
*)

